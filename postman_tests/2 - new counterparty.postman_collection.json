{
	"info": {
		"_postman_id": "7472384a-770c-4e7c-9214-32c1e7793fd0",
		"name": "2 - new counterparty",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/api/contragent-segment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function random_element(array) {\r",
							"  return array[Number(Math.floor(Math.random() * Math.floor(array.length)))];\r",
							"}\r",
							"\r",
							"const body = pm.response.json();\r",
							"\r",
							"const expected_keys_in_response_body = [\"ID\", \"Name\", \"SlugLabel\"];\r",
							"\r",
							"const contragent_segment_schema = {\r",
							"\r",
							"  \"title\": `Сегменты контрагентов / SELECT * FROM \"Dictionary\".\"ContragentSegment\" WHERE \"IsDeleted\" = 0`,\r",
							"  \"items\": {\r",
							"      \"title\": \"Required keys\",\r",
							"      \"required\": [\r",
							"          \"ID\",\r",
							"          \"Name\",\r",
							"          \"SlugLabel\",\r",
							"      ],\r",
							"      \"properties\": {\r",
							"          \"ID\": {\r",
							"              \"title\": `SELECT \"ID\" FROM \"Dictionary\".\"ContragentSegment\";`,\r",
							"              \"default\": 0,\r",
							"              \"examples\": [\r",
							"                  4\r",
							"              ],\r",
							"              \"$id\": \"#/items/properties/ID\",\r",
							"              \"type\": \"integer\"\r",
							"          },\r",
							"          \"Name\": {\r",
							"              \"title\": `SELECT \"Name\" FROM \"Dictionary\".\"ContragentSegment\";`,\r",
							"              \"default\": \"\",\r",
							"              \"pattern\": \"^(.*)$\",\r",
							"              \"examples\": [\r",
							"                  \"OS Telecom\"\r",
							"              ],\r",
							"              \"$id\": \"#/items/properties/Name\",\r",
							"              \"type\": \"string\"\r",
							"          },\r",
							"          \"SlugLabel\": {\r",
							"              \"title\": `SlugLabel`,\r",
							"              \"default\": \"\",\r",
							"              \"pattern\": \"^Dictionary.ContragentSegment.[0-9]+$\",\r",
							"              \"examples\": [\r",
							"                  \"Dictionary.ContragentSegment.4\"\r",
							"              ],\r",
							"              \"$id\": \"#/items/properties/SlugLabel\",\r",
							"              \"type\": \"string\"\r",
							"          }\r",
							"      },\r",
							"      \"$id\": \"#/items\",\r",
							"      \"type\": \"object\",\r",
							"      \"additionalProperties\": false\r",
							"  },\r",
							"  \"$id\": \"/api/contragent-segment\",\r",
							"  \"type\": \"array\",\r",
							"  \"definitions\": {},\r",
							"  \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"  \r",
							"}\r",
							"\r",
							"\r",
							"/* --- TESTS --- */\r",
							"\r",
							"pm.test(`Сheck the active environment is 'new counterparty'`, () => {\r",
							"    pm.expect(pm.environment.name).to.eql(\"new counterparty\");\r",
							"});\r",
							"\r",
							"pm.test(`Successful GET request! Status code is 200`, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Status code is \"OK\"`, function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 5000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test('Schema \"contragent-segment\" is valid', function() {\r",
							"    pm.expect(tv4.validate(body, contragent_segment_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is an array\", function () {\r",
							"    pm.expect(body).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Array consists of objects\", function () {\r",
							"    pm.expect(body.every(elem => typeof(elem) === \"object\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(`Response body has all expected keys and length of ${expected_keys_in_response_body.length}`, function () {\r",
							"    body.forEach((elem)=> {\r",
							"\r",
							"      let storageTank = Object.keys(elem).filter(function(key) {\r",
							"          return !expected_keys_in_response_body.includes(key) \r",
							"      });\r",
							"      \r",
							"      if (storageTank.length !== 0) {\r",
							"          console.log(`Actual keys received in response did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"      }\r",
							"\r",
							"      pm.expect(elem).to.be.an('object').that.has.all.keys(expected_keys_in_response_body);\r",
							"      pm.expect(storageTank.length).to.eql(0);\r",
							"\r",
							"      pm.expect(Object.keys(elem)).to.have.lengthOf(expected_keys_in_response_body.length);\r",
							"      \r",
							"  })\r",
							"});\r",
							"      \r",
							"pm.test(\"Values of 'ID' keys are numbers\", function () {\r",
							"  pm.expect(body.every(elem => typeof(elem.ID) === \"number\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Values of 'Name' keys are strings\", function () {\r",
							"  pm.expect(body.every(elem => typeof(elem.Name) === \"string\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Values of 'SlugLabel' keys are matching regular expression\", function () {\r",
							"  body.forEach((elem)=> {\r",
							"      pm.expect(/^Dictionary.ContragentSegment.\\d+$/.test(elem.SlugLabel)).to.be.true;\r",
							"  })\r",
							"});\r",
							"\r",
							"pm.test(`Accidental \"SegmentID\" was recorded to the environment collection`, function () {\r",
							"  let SegmentID_array  = body.map(el => el.ID);\r",
							"  let SegmentID_random = random_element(SegmentID_array);\r",
							"  console.log(\"SegmentID_random: \" + SegmentID_random);\r",
							"  pm.environment.set(\"SegmentID\", SegmentID_random);\r",
							"  pm.expect(SegmentID_random).to.eql(pm.environment.get(\"SegmentID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let origin;\r",
							"\r",
							"if (/\\.ru\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.ru.*$/s, \".ru\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"if(/\\.com\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.com.*$/s, \".com\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"\r",
							"let referer = origin + \"/\";\r",
							"pm.environment.set(\"referer\", referer);\r",
							"\r",
							"\r",
							"let request_url    = origin.split('.');\r",
							"    request_url[0] = request_url[0] + \"-\" + pm.globals.get(\"host\");\r",
							"    request_url    = request_url.join('.');\r",
							"pm.environment.set(\"request_url\", request_url);\r",
							"\r",
							"\r",
							"let authority = request_url.replace(/^http:\\/\\/|^https:\\/\\//, \"\");\r",
							"pm.environment.set(\"authority\", authority);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authority",
						"value": "{{authority}}"
					},
					{
						"key": "pragma",
						"value": "no-cache"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\""
					},
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "uniquehashcaseid",
						"value": "undefined"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"
					},
					{
						"key": "origin",
						"value": "{{origin}}"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "referer",
						"value": "{{referer}}"
					},
					{
						"key": "accept-language",
						"value": "ru,de;q=0.9,uk;q=0.8,hr;q=0.7,hu;q=0.6,en;q=0.5,en-AU;q=0.4,en-GB-oxendict;q=0.3,en-GB;q=0.2,en-IN;q=0.1,en-CA;q=0.1,en-NZ;q=0.1,en-US;q=0.1,en-ZA;q=0.1"
					},
					{
						"key": "cookie",
						"value": "{{cookie}}"
					}
				],
				"url": {
					"raw": "{{request_url}}/api/contragent-segment",
					"host": [
						"{{request_url}}"
					],
					"path": [
						"api",
						"contragent-segment"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/api/user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let origin;\r",
							"\r",
							"if (/\\.ru\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.ru.*$/s, \".ru\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"if(/\\.com\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.com.*$/s, \".com\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"\r",
							"let referer = origin + \"/admin/client/new/overview\";\r",
							"pm.environment.set(\"referer\", referer);\r",
							"\r",
							"\r",
							"let authority = origin.replace(/^http:\\/\\/|^https:\\/\\//, \"\");\r",
							"pm.environment.set(\"authority\", authority);\r",
							"\r",
							"\r",
							"let request_url = origin;\r",
							"pm.environment.set(\"request_url\", request_url);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();\r",
							"\r",
							"const expected_keys_in_response_body = [\"ID\", \"Login\", \"Surname\", \"Name\", \"MiddleName\", \"Email\", \"Permissions\", \"PreConfigured\", \"MediatelAgentIP\", \"MediatelSystemID\", \"MediatelAgentPort\", \"MediatelLogin\", \"MediatelExtension\", \"WebrtcLogin\", \"WebrtcPassword\", \"WebrtcRealm\", \"WebrtcWebsocketAddress\", \"LegalView\", \"MediatelAgentType\", \"SecondForCache\", \"RolesID\", \"MediatelPassword\", \"MaxIdleDuration\", \"UnavailablePermissions\", \"MaxPTPDaysLimit\", \"MediatelSystemName\", \"MediatelServiceAddress\", \"CanViewRoleID\", \"group\", \"LightIdleDuration\", \"KeepAliveActivityTimer\", \"has_ldap_integration\"];\r",
							"\r",
							"const user_schema = {\r",
							"\r",
							"    \"title\": \"User Info Settings (URL: .../admin/settings/users_and_roles/users?page=1)\",\r",
							"    \"required\": [\r",
							"        \"ID\",\r",
							"        \"Login\",\r",
							"        \"Surname\",\r",
							"        \"Name\",\r",
							"        \"MiddleName\",\r",
							"        \"Email\",\r",
							"        \"Permissions\",\r",
							"        \"PreConfigured\",\r",
							"        \"MediatelAgentIP\",\r",
							"        \"MediatelSystemID\",\r",
							"        \"MediatelAgentPort\",\r",
							"        \"MediatelLogin\",\r",
							"        \"MediatelExtension\",\r",
							"        \"WebrtcLogin\",\r",
							"        \"WebrtcPassword\",\r",
							"        \"WebrtcRealm\",\r",
							"        \"WebrtcWebsocketAddress\",\r",
							"        \"LegalView\",\r",
							"        \"MediatelAgentType\",\r",
							"        \"SecondForCache\",\r",
							"        \"RolesID\",\r",
							"        \"MediatelPassword\",\r",
							"        \"MaxIdleDuration\",\r",
							"        \"UnavailablePermissions\",\r",
							"        \"MaxPTPDaysLimit\",\r",
							"        \"MediatelSystemName\",\r",
							"        \"MediatelServiceAddress\",\r",
							"        \"CanViewRoleID\",\r",
							"        \"group\",\r",
							"        \"LightIdleDuration\",\r",
							"        \"KeepAliveActivityTimer\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"ID\": {\r",
							"            \"title\": `user's identification number / select \"ID\" from \"Data\".\"User\";`,\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                7017\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Login\": {\r",
							"            \"title\": `user's login / select \"Login\" from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": `^${pm.globals.get(\"login\")}$`,\r",
							"            \"enum\": [`${pm.globals.get(\"login\")}`],\r",
							"            \"examples\": [\r",
							"                \"YarPl\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Login\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Surname\": {\r",
							"            \"title\": `user's surname / select \"Surname\" from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Pl.\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Surname\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Name\": {\r",
							"            \"title\": `user's first name / select \"Name\" from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Yaroslav\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MiddleName\": {\r",
							"            \"title\": `user's patronymic / select \"MiddleName\" from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"R.\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MiddleName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Email\": {\r",
							"            \"title\": `user's e-mail / select \"ContactInfo\" -> 'Email' as \"e-mail\" from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"yaroslav.plias@creditexpress.ua\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Email\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Permissions\": {\r",
							"            \"title\": `permissions for selected user / select * from \"Data\".\"UserPermission\";`,\r",
							"            \"items\": {\r",
							"                \"title\": \"A string value as element of the array, which represents a name of a permission\",\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"CanShowImportMenu\"\r",
							"                ],\r",
							"                \"$id\": \"#/properties/Permissions/items\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"$id\": \"#/properties/Permissions\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"PreConfigured\": {\r",
							"            \"title\": `select \"PreConfigured\" from \"Data\".\"UserPermission\";`,\r",
							"            \"default\": false,\r",
							"            \"enum\": [false, true],\r",
							"            \"examples\": [\r",
							"                false\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PreConfigured\",\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"MediatelAgentIP\": {\r",
							"            \"title\": `MediatelAgentIP`,\r",
							"            \"default\": null,\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelAgentIP\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"MediatelSystemID\": {\r",
							"            \"title\": `select \"ID\" from \"Dialer\".\"System\" where \"IsDeleted\" = 0; / select \"AuthorizationInfo\" #> '{Dialer, 0}' -> 'SystemID' from \"Data\".\"User\";`,\r",
							"            \"default\": \"1\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"1\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelSystemID\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MediatelAgentPort\": {\r",
							"            \"title\": \"MediatelAgentPort\",\r",
							"            \"default\": null,\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelAgentPort\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"MediatelLogin\": {\r",
							"            \"title\": `select \"AuthorizationInfo\" #> '{Dialer, 0}' -> 'Login' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"YPlias\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelLogin\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MediatelExtension\": {\r",
							"            \"title\": `select \"AuthorizationInfo\" #> '{Dialer, 0}' -> 'MediatelExtension' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"enum\": [\"webrtc-1019\", \"1147\", \"webrtc-2010\"],\r",
							"            \"examples\": [\r",
							"                \"webrtc-1019\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelExtension\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"WebrtcLogin\": {\r",
							"            \"title\": `SELECT \"WebRTC\" -> 'Login' FROM \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            //\"enum\": [\"2010\", \"1019\", \"1147\"],\r",
							"            \"examples\": [\r",
							"                \"1019\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebrtcLogin\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"WebrtcPassword\": {\r",
							"            \"title\": `select \"WebRTC\" -> 'Password' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Fvc231!\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebrtcPassword\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"WebrtcRealm\": {\r",
							"            \"title\": `select \"WebRTC\" -> 'Realm' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            /*\"enum\": [\"webrtc.rsvcollection.ru\", \"webrtc-ua.rsvcollection.ru\", \"webrtc.ru.creditexpress.com\", \"webrtc.debtfort.com\", \"webrtc.ua.creditexpress.com\", \"creditkasa-webrtc.creditorro.com\"],*/\r",
							"            \"examples\": [\r",
							"                \"webrtc.ua.creditexpress.com\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebrtcRealm\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"WebrtcWebsocketAddress\": {\r",
							"            \"title\": `select \"WebRTC\" -> 'WebsocketAddress' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            /*\"enum\": [\"wss://webrtc.rsvcollection.ru/ws\", \"wss://webrtc-ua.rsvcollection.ru/ws\", \"wss://webrtc.ru.creditexpress.com/ws\", \"wss://webrtc.debtfort.com/ws\", \"wss://webrtc.ua.creditexpress.com/ws\", \"wss://creditkasa-webrtc.creditorro.com/ws\"],*/\r",
							"            \"examples\": [\r",
							"                \"wss://webrtc.ua.creditexpress.com/ws\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebrtcWebsocketAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"LegalView\": {\r",
							"            \"title\": \"LegalView\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/LegalView\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"MediatelAgentType\": {\r",
							"            \"title\": `select * FROM \"Dictionary\".\"MediatelAgentType\";`,\r",
							"            \"default\": \"Disabled\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"enum\": [\"Disabled\", \"RemoteAuto\"],\r",
							"            \"examples\": [\r",
							"                \"RemoteAuto\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelAgentType\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"SecondForCache\": {\r",
							"            \"title\": \"SecondForCache\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [900],\r",
							"            \"examples\": [\r",
							"                900\r",
							"            ],\r",
							"            \"$id\": \"#/properties/SecondForCache\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"RolesID\": {\r",
							"            \"title\": `RolesID / select * from \"Dictionary\".\"Role\"; / select  \"AccessRight\" -> 'RolesID' from \"Data\".\"User\";`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"[15, 10, 19, 17, 7, 11, 16, 4, 6, 14, 9, 5, 2, 30, 22]\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/RolesID\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MediatelPassword\": {\r",
							"            \"title\": \"MediatelPassword\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Fvc231!\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelPassword\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MaxIdleDuration\": {\r",
							"            \"title\": \"MaxIdleDuration\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [10800],\r",
							"            \"examples\": [\r",
							"                10800\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MaxIdleDuration\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"UnavailablePermissions\": {\r",
							"            \"title\": \"UnavailablePermissions\",\r",
							"            \"default\": null,\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/UnavailablePermissions\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"MaxPTPDaysLimit\": {\r",
							"            \"title\": \"MaxPTPDaysLimit\",\r",
							"            \"default\": null,\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MaxPTPDaysLimit\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"MediatelSystemName\": {\r",
							"            \"title\": \"MediatelSystemName\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"enum\": [\"MT-Astra1\", \"MT-MSK\", \"MT-Kiev\", \"MT-Astra2\"],\r",
							"            \"examples\": [\r",
							"                \"MT-Kiev\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelSystemName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MediatelServiceAddress\": {\r",
							"            \"title\": \"MediatelServiceAddress\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"enum\": [\"https://mediatel.ua.creditexpress.com\"],\r",
							"            \"examples\": [\r",
							"                \"https://mediatel.ua.creditexpress.com\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MediatelServiceAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"CanViewRoleID\": {\r",
							"            \"title\": \"CanViewRoleID\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"[12, 3, 1, 2, 23, 4, 5, 15, 22, 9, 18, 8, 6, 30, 7, 14, 24, 13, 21, 20, 17, 10, 19, 11, 16]\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/CanViewRoleID\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"group\": {\r",
							"            \"title\": `select  * from \"Dictionary\".\"UserDepartment\" where \"IsDeleted\" = 0;`,\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"ИТ\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/group\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"LightIdleDuration\": {\r",
							"            \"title\": \"LightIdleDuration\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1800],\r",
							"            \"examples\": [\r",
							"                1800\r",
							"            ],\r",
							"            \"$id\": \"#/properties/LightIdleDuration\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"KeepAliveActivityTimer\": {\r",
							"            \"title\": \"KeepAliveActivityTimer\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [60],\r",
							"            \"examples\": [\r",
							"                60\r",
							"            ],\r",
							"            \"$id\": \"#/properties/KeepAliveActivityTimer\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"has_ldap_integration\": {\r",
							"            \"title\": \"has_ldap_integration\",\r",
							"            \"default\": false,\r",
							"            \"enum\": [true, false],\r",
							"            \"examples\": [\r",
							"                false, true\r",
							"            ],\r",
							"            \"$id\": \"#/properties/has_ldap_integration\",\r",
							"            \"type\": \"boolean\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"/api/api/user\",\r",
							"    \"type\": \"object\",\r",
							"    \"additionalProperties\": false,\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"\r",
							"}\r",
							"\r",
							"\r",
							"/* --- TESTS --- */\r",
							"\r",
							"pm.test(`Сheck the active environment is 'new counterparty'`, () => {\r",
							"    pm.expect(pm.environment.name).to.eql(\"new counterparty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful GET request! Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Status code is \"OK\"`, function () {\r",
							"  pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 5000ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test('Schema `user` is valid', function() {\r",
							"  pm.expect(tv4.validate(body, user_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is an object that has all expected keys\", function () {\r",
							"  \r",
							"  let storageTank = Object.keys(body).filter(function(key) {\r",
							"    return !expected_keys_in_response_body.includes(key) \r",
							"  });\r",
							"  \r",
							"  if (storageTank.length !== 0) {\r",
							"    console.log(`Actual keys received in response did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"  }\r",
							"  \r",
							"  pm.expect(body).to.be.an('object').that.has.all.keys(expected_keys_in_response_body);\r",
							"  pm.expect(storageTank.length).to.eql(0);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(`Response body has length of ${expected_keys_in_response_body.length}`, function () {\r",
							"  pm.expect(Object.keys(body)).to.have.lengthOf(expected_keys_in_response_body.length);\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"ID\" is a number`, function () {\r",
							"  pm.expect(body.ID).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'Login' in the response body is a string and is equal to the value from the global collection\", function () {\r",
							"  pm.expect(body.Login).to.be.a('string');\r",
							"  pm.expect(pm.globals.get(\"login\")).to.be.eql(body.Login);\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"Surname\" is string`, function () {\r",
							"  pm.expect(body.Surname).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"Name\" is string`, function () {\r",
							"  pm.expect(body.Name).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"MiddleName\" is string`, function () {\r",
							"  pm.expect(body.MiddleName).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'Email' is a valid email\", function () {\r",
							"  pm.expect(body.Email).to.be.a(\"string\");\r",
							"  pm.expect(/^\\S+@\\S+\\.\\S+$/.test(body.Email)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Array 'Permissions' is not empty and all its elemets are not empty strings\", function () {\r",
							"  pm.expect(body.Permissions).to.be.an(\"array\");\r",
							"  pm.expect(body.Permissions.length).to.be.above(0);\r",
							"\r",
							"  pm.expect(body.Permissions.every(elem => typeof(elem) === \"string\")).to.be.true;\r",
							"  pm.expect(body.Permissions.every(elem => elem.length > 0)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"PreConfigured\" is a boolean`, function () {\r",
							"  pm.expect(body.PreConfigured).to.be.a('boolean');\r",
							"  pm.expect(body.PreConfigured).to.be.oneOf([true, false]);\r",
							"});\r",
							"\r",
							"pm.test(`\"MediatelAgentIP\" is null`, function () {\r",
							"  pm.expect(body.MediatelAgentIP).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'MediatelSystemID' has expected value\", function () {\r",
							"  pm.expect(body.MediatelSystemID).to.be.oneOf([\"2\", \"4\", \"1\", \"3\"]);\r",
							"});\r",
							"\r",
							"pm.test(`\"MediatelAgentPort\" is null`, function () {\r",
							"  pm.expect(body.MediatelAgentPort).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"MediatelLogin\" is string`, function () {\r",
							"  pm.expect(body.MediatelLogin).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'MediatelExtension' is matching regular expression\", function () {\r",
							"  pm.expect(/^auto$|^webrtc-\\d+$|^\\d+$/.test(body.MediatelExtension)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'WebrtcLogin' is matching regular expression\", function () {\r",
							"  pm.expect(/^\\d+$/.test(body.WebrtcLogin)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"WebrtcPassword\" is string`, function () {\r",
							"  pm.expect(body.WebrtcPassword).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'WebrtcRealm' has expected value\", function () {\r",
							"  //pm.expect(body.WebrtcRealm).to.be.oneOf([null, \"webrtc.ua.creditexpress.com\", \"creditkasa-webrtc.creditorro.com\"]);\r",
							"  pm.expect(/^[a-z-]*webrtc[a-z-.]+$|null/.test(body.WebrtcRealm)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'WebrtcWebsocketAddress' has expected value\", function () {\r",
							"  //pm.expect(body.WebrtcWebsocketAddress).to.be.oneOf([null, \"wss://webrtc.ua.creditexpress.com/ws\", \"wss://creditkasa-webrtc.creditorro.com/ws\"]);\r",
							"  pm.expect(/^wss:\\/\\/[a-z-]*webrtc[a-z-.]+\\/ws$|null/.test(body.WebrtcWebsocketAddress)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'WebrtcWebsocketAddress' is matching regular expression\", function () {\r",
							"  let regexp = new RegExp(`^null$|^wss://${body.WebrtcRealm}/ws$`);\r",
							"  pm.expect(regexp.test(String(body.WebrtcWebsocketAddress))).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'LegalView' is a number between [0, 1]\", function () {\r",
							"  pm.expect(body.LegalView).to.be.a(\"number\");\r",
							"  pm.expect(body.LegalView).to.be.oneOf([0,1]);\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'MediatelAgentType' has expected string in its value\", function () {\r",
							"  pm.expect(body.MediatelAgentType).to.be.a(\"string\");\r",
							"  pm.expect(body.MediatelAgentType).to.be.oneOf([\"Disabled\", \"Local\", \"RemoteManual\", \"RemoteAuto\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'SecondForCache' has number 900\", function () {\r",
							"  pm.expect(body.SecondForCache).to.be.a(\"number\");\r",
							"  pm.expect(body.SecondForCache).to.eql(900);\r",
							"  pm.expect(body.SecondForCache).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'RolesID' is a stringified array of numbers\", function () {\r",
							"  pm.expect(body.RolesID).to.be.a(\"string\");\r",
							"\r",
							"  pm.expect(JSON.parse(body.RolesID)).to.be.an(\"array\");\r",
							"  pm.expect(JSON.parse(body.RolesID).length).to.be.above(0);\r",
							"\r",
							"  pm.expect(JSON.parse(body.RolesID).every(elem => typeof(elem) === \"number\")).to.be.true;\r",
							"  pm.expect(JSON.parse(body.RolesID).every(elem => elem > 0)).to.be.true;   \r",
							"});\r",
							"\r",
							"pm.test(`Value in \"MediatelPassword\" is string`, function () {\r",
							"  pm.expect(body.MediatelPassword).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'MaxIdleDuration' has expected number as its value\", function () {\r",
							"  pm.expect(body.MaxIdleDuration).to.be.a(\"number\");\r",
							"  pm.expect(body.MaxIdleDuration).to.eql(10800);\r",
							"  pm.expect(body.MaxIdleDuration).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'UnavailablePermissions' is null\", function () {\r",
							"    pm.expect(body.UnavailablePermissions).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'MaxPTPDaysLimit' is null\", function () {\r",
							"  pm.expect(body.MaxPTPDaysLimit).to.be.null;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Key 'MediatelSystemName' has expected string in its value\", function () {\r",
							"  pm.expect(body.MediatelSystemName).to.be.a(\"string\");\r",
							"  pm.expect(body.MediatelSystemName).to.be.oneOf([\"MT-Astra1\", \"MT-MSK\", \"MT-Kiev\", \"MT-Astra2\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'MediatelServiceAddress' has expected string in its value\", function () {\r",
							"  pm.expect(body.MediatelServiceAddress).to.be.a(\"string\");\r",
							"  pm.expect(body.MediatelServiceAddress).to.be.oneOf([\"https://mediatel.ua.creditexpress.com\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Value in key 'CanViewRoleID' is a stringified array of numbers\", function () {\r",
							"  pm.expect(body.CanViewRoleID).to.be.a(\"string\");\r",
							"\r",
							"  pm.expect(JSON.parse(body.CanViewRoleID)).to.be.an(\"array\");\r",
							"  pm.expect(JSON.parse(body.CanViewRoleID).length).to.be.above(0);\r",
							"\r",
							"  pm.expect(JSON.parse(body.CanViewRoleID).every(elem => typeof(elem) === \"number\")).to.be.true;\r",
							"  pm.expect(JSON.parse(body.CanViewRoleID).every(elem => elem > 0)).to.be.true;   \r",
							"});\r",
							"\r",
							"pm.test(`Value in \"group\" is string`, function () {\r",
							"  pm.expect(body.group).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'LightIdleDuration' has expected number as its value\", function () {\r",
							"  pm.expect(body.LightIdleDuration).to.be.a(\"number\");\r",
							"  pm.expect(body.LightIdleDuration).to.eql(1800);\r",
							"  pm.expect(body.LightIdleDuration).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Key 'KeepAliveActivityTimer' has number 60\", function () {\r",
							"  pm.expect(body.KeepAliveActivityTimer).to.be.a(\"number\");\r",
							"  pm.expect(body.KeepAliveActivityTimer).to.eql(60);\r",
							"  pm.expect(body.KeepAliveActivityTimer).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"ResponsibleUserID was recorded to the environment collection\", function () {\r",
							"    pm.environment.set(\"ResponsibleUserID\", body.ID);\r",
							"    pm.expect(body.ID).to.eql(pm.environment.get(\"ResponsibleUserID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authority",
						"value": "{{authority}}"
					},
					{
						"key": "pragma",
						"value": "no-cache"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\""
					},
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-origin"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "referer",
						"value": "{{referer}}"
					},
					{
						"key": "accept-language",
						"value": "ru,de;q=0.9,uk;q=0.8,hr;q=0.7,hu;q=0.6,en;q=0.5,en-AU;q=0.4,en-GB-oxendict;q=0.3,en-GB;q=0.2,en-IN;q=0.1,en-CA;q=0.1,en-NZ;q=0.1,en-US;q=0.1,en-ZA;q=0.1"
					},
					{
						"key": "cookie",
						"value": "{{cookie}}"
					}
				],
				"url": {
					"raw": "{{request_url}}/api/api/user",
					"host": [
						"{{request_url}}"
					],
					"path": [
						"api",
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "beta (search_project_manager) /api/operator?search%5BLogin%5D={{login}}&limit=1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let origin;\r",
							"\r",
							"if (/\\.ru\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.ru.*$/s, \".ru\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"if(/\\.com\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.com.*$/s, \".com\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"\r",
							"let referer = origin + \"/\";\r",
							"pm.environment.set(\"referer\", referer);\r",
							"\r",
							"\r",
							"let request_url    = origin.split('.');\r",
							"    request_url[0] = request_url[0] + \"-\" + pm.globals.get(\"host\");\r",
							"    request_url    = request_url.join('.');\r",
							"pm.environment.set(\"request_url\", request_url);\r",
							"\r",
							"\r",
							"let authority = request_url.replace(/^http:\\/\\/|^https:\\/\\//, \"\");\r",
							"pm.environment.set(\"authority\", authority);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();\r",
							"\r",
							"const operator_search_schema = {\r",
							"    \r",
							"    \"title\": \"An array of found users\",\r",
							"    \"items\": {\r",
							"        \"title\": \"An object value describing user's data\",\r",
							"        \"required\": [\r",
							"            \"ID\",\r",
							"            \"Login\",\r",
							"            \"Surname\",\r",
							"            \"Name\",\r",
							"            \"MiddleName\",\r",
							"            \"WorkPlaceID\",\r",
							"            \"Inserted\",\r",
							"            \"ContactInfo\",\r",
							"            \"AccessRight\",\r",
							"            \"SMSCampaign\",\r",
							"            \"AdditionalInfo\",\r",
							"            \"AuthorizationInfo\",\r",
							"            \"Updated\",\r",
							"            \"Alias\",\r",
							"            \"EmploymentDate\",\r",
							"            \"AllowToUseLocalDialer\",\r",
							"            \"WebRTC\",\r",
							"            \"AgentTypeID\",\r",
							"            \"IsTemporaryPassword\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"ID\": {\r",
							"                \"title\": `user's identification number / select \"ID\" from \"Data\".\"User\"`,\r",
							"                \"default\": 0,\r",
							"                \"examples\": [\r",
							"                    7017\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/ID\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"Login\": {\r",
							"                \"title\": `user's login / select \"Login\" from \"Data\".\"User\";`,\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": `^${pm.globals.get(\"login\")}$`,\r",
							"                \"enum\": [`${pm.globals.get(\"login\")}`],\r",
							"                \"examples\": [\r",
							"                    \"YarPl\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Login\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"Surname\": {\r",
							"                \"title\": `user's surname / select \"Surname\" from \"Data\".\"User\";`,\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"Pl.\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Surname\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"Name\": {\r",
							"                \"title\": `user's first name / select \"Name\" from \"Data\".\"User\";`,\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"Yaroslav\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"MiddleName\": {\r",
							"                \"title\": `user's patronymic / select \"MiddleName\" from \"Data\".\"User\";`,\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"R.\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/MiddleName\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"WorkPlaceID\": {\r",
							"                \"title\": `identification number of user's working location / select * from \"Dictionary\".\"WorkPlace\" where \"IsDeleted\" = 0;`,\r",
							"                \"default\": 0,\r",
							"                \"examples\": [\r",
							"                    6\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/WorkPlaceID\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"Inserted\": {\r",
							"                \"title\": \"when record is created trigger\",\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"2019-01-21 08:44:05.699829\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Inserted\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"ContactInfo\": {\r",
							"                \"title\": \"ContactInfo\",\r",
							"                \"required\": [\r",
							"                    \"Email\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"Email\": {\r",
							"                        \"title\": `user's e-mail / select \"ContactInfo\" -> 'Email' as \"e-mail\" from \"Data\".\"User\";`,\r",
							"                        \"default\": \"\",\r",
							"                        \"pattern\": \"^(.*)$\",\r",
							"                        \"examples\": [\r",
							"                            \"yaroslav.plias@creditexpress.ua\"\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/ContactInfo/properties/Email\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/ContactInfo\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"AccessRight\": {\r",
							"                \"title\": \"AccessRight\",\r",
							"                \"required\": [\r",
							"                    \"RolesID\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"RolesID\": {\r",
							"                        \"title\": `An array of users' roles / select * from \"Dictionary\".\"Role\"; / select  \"AccessRight\" -> 'RolesID' from \"Data\".\"User\";`,\r",
							"                        \"items\": {\r",
							"                            \"title\": \"identification numbers of users' roles\",\r",
							"                            \"default\": 0,\r",
							"                            \"examples\": [\r",
							"                                15\r",
							"                            ],\r",
							"                            \"$id\": \"#/items/properties/AccessRight/properties/RolesID/items\",\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"$id\": \"#/items/properties/AccessRight/properties/RolesID\",\r",
							"                        \"type\": \"array\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/AccessRight\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"SMSCampaign\": {\r",
							"                \"title\": \"SMSCampaign\",\r",
							"                \"default\": null,\r",
							"                \"examples\": [\r",
							"                    null\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/SMSCampaign\",\r",
							"                \"type\": \"null\"\r",
							"            },\r",
							"            \"AdditionalInfo\": {\r",
							"                \"title\": \"AdditionalInfo\",\r",
							"                \"required\": [\r",
							"                    \"Balance\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"Balance\": {\r",
							"                        \"title\": `select \"AdditionalInfo\" -> 'Balance' as \"My balance\", *  from \"Data\".\"User\"`,\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            2000\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/AdditionalInfo/properties/Balance\",\r",
							"                        \"type\": \"integer\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/AdditionalInfo\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"AuthorizationInfo\": {\r",
							"                \"title\": \"AuthorizationInfo\",\r",
							"                \"required\": [\r",
							"                    \"Dialer\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"Dialer\": {\r",
							"                        \"title\": \"Dialer\",\r",
							"                        \"items\": {\r",
							"                            \"title\": \"Dialer's object value\",\r",
							"                            \"required\": [\r",
							"                                \"Login\",\r",
							"                                \"Password\",\r",
							"                                \"SystemID\",\r",
							"                                \"MediatelExtension\"\r",
							"                            ],\r",
							"                            \"properties\": {\r",
							"                                \"Login\": {\r",
							"                                    \"title\": \"Login\",\r",
							"                                    \"default\": \"\",\r",
							"                                    \"pattern\": \"^(.*)$\",\r",
							"                                    \"examples\": [\r",
							"                                        \"YPlias\"\r",
							"                                    ],\r",
							"                                    \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer/items/properties/Login\",\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                \"Password\": {\r",
							"                                    \"title\": \"Password\",\r",
							"                                    \"default\": \"\",\r",
							"                                    \"pattern\": \"^(.*)$\",\r",
							"                                    \"examples\": [\r",
							"                                        \"Fvc231!\"\r",
							"                                    ],\r",
							"                                    \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer/items/properties/Password\",\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                \"SystemID\": {\r",
							"                                    \"title\": \"SystemID\",\r",
							"                                    \"default\": 0,\r",
							"                                    \"examples\": [\r",
							"                                        1\r",
							"                                    ],\r",
							"                                    \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer/items/properties/SystemID\",\r",
							"                                    \"type\": \"integer\"\r",
							"                                },\r",
							"                                \"MediatelExtension\": {\r",
							"                                    \"title\": \"MediatelExtension\",\r",
							"                                    \"default\": \"\",\r",
							"                                    \"pattern\": \"^(.*)$\",\r",
							"                                    \"enum\": [\"webrtc-1019\", \"1147\", \"webrtc-2010\"],\r",
							"                                    \"examples\": [\r",
							"                                        \"webrtc-1019\"\r",
							"                                    ],\r",
							"                                    \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer/items/properties/MediatelExtension\",\r",
							"                                    \"type\": \"string\"\r",
							"                                }\r",
							"                            },\r",
							"                            \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer/items\",\r",
							"                            \"type\": \"object\",\r",
							"                            \"additionalProperties\": false\r",
							"                        },\r",
							"                        \"$id\": \"#/items/properties/AuthorizationInfo/properties/Dialer\",\r",
							"                        \"type\": \"array\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/AuthorizationInfo\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"Updated\": {\r",
							"                \"title\": \"last modification date\",\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"2021-07-26 11:30:38.436261\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Updated\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"Alias\": {\r",
							"                \"title\": \"pseudonym\",\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"YarPl\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/Alias\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"EmploymentDate\": {\r",
							"                \"title\": \"the date of employment\",\r",
							"                \"default\": \"\",\r",
							"                \"pattern\": \"^(.*)$\",\r",
							"                \"examples\": [\r",
							"                    \"2019-03-27\"\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/EmploymentDate\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"AllowToUseLocalDialer\": {\r",
							"                \"title\": \"AllowToUseLocalDialer\",\r",
							"                \"default\": false,\r",
							"                \"enum\": [false, true],\r",
							"                \"examples\": [\r",
							"                    false\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/AllowToUseLocalDialer\",\r",
							"                \"type\": \"boolean\"\r",
							"            },\r",
							"            \"WebRTC\": {\r",
							"                \"title\": \"WebRTC details\",\r",
							"                \"required\": [\r",
							"                    \"Login\",\r",
							"                    \"Realm\",\r",
							"                    \"Password\",\r",
							"                    \"WebsocketAddress\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"Login\": {\r",
							"                        \"title\": `SELECT \"WebRTC\" -> 'Login' FROM \"Data\".\"User\"`,\r",
							"                        \"default\": \"\",\r",
							"                        \"pattern\": \"^(.*)$\",\r",
							"                        //\"enum\": [\"2010\", \"1019\", \"1147\"],\r",
							"                        \"examples\": [\r",
							"                            \"1019\"\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/WebRTC/properties/Login\",\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"Realm\": {\r",
							"                        \"title\": `select \"WebRTC\" -> 'Realm' from \"Data\".\"User\";`,\r",
							"                        \"default\": \"\",\r",
							"                        \"pattern\": \"^(.*)$\",\r",
							"                        /*\"enum\": [\"webrtc.rsvcollection.ru\", \"webrtc-ua.rsvcollection.ru\", \"webrtc.ru.creditexpress.com\", \"webrtc.debtfort.com\", \"webrtc.ua.creditexpress.com\", \"creditkasa-webrtc.creditorro.com\"],*/\r",
							"                        \"examples\": [\r",
							"                            \"webrtc.ua.creditexpress.com\"\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/WebRTC/properties/Realm\",\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"Password\": {\r",
							"                        \"title\": \"Password\",\r",
							"                        \"default\": \"\",\r",
							"                        \"pattern\": \"^(.*)$\",\r",
							"                        \"examples\": [\r",
							"                            \"Fvc231!\"\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/WebRTC/properties/Password\",\r",
							"                        \"type\": \"string\"\r",
							"                    },\r",
							"                    \"WebsocketAddress\": {\r",
							"                        \"title\": `select \"WebRTC\" -> 'WebsocketAddress' from \"Data\".\"User\";`,\r",
							"                        \"default\": \"\",\r",
							"                        \"pattern\": \"^(.*)$\",\r",
							"                        /*\"enum\": [\"wss://webrtc.rsvcollection.ru/ws\", \"wss://webrtc-ua.rsvcollection.ru/ws\", \"wss://webrtc.ru.creditexpress.com/ws\", \"wss://webrtc.debtfort.com/ws\", \"wss://webrtc.ua.creditexpress.com/ws\", \"wss://creditkasa-webrtc.creditorro.com/ws\"],*/\r",
							"                        \"examples\": [\r",
							"                            \"wss://webrtc.ua.creditexpress.com/ws\"\r",
							"                        ],\r",
							"                        \"$id\": \"#/items/properties/WebRTC/properties/WebsocketAddress\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/WebRTC\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"AgentTypeID\": {\r",
							"                \"title\": \"An integer value\",\r",
							"                \"default\": 0,\r",
							"                \"examples\": [\r",
							"                    4\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/AgentTypeID\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"IsTemporaryPassword\": {\r",
							"                \"title\": \"A boolean value\",\r",
							"                \"default\": false,\r",
							"                \"examples\": [\r",
							"                    false\r",
							"                ],\r",
							"                \"$id\": \"#/items/properties/IsTemporaryPassword\",\r",
							"                \"type\": \"boolean\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\",\r",
							"        \"additionalProperties\": false\r",
							"    },\r",
							"    \"$id\": \"/api/operator?search\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"    \r",
							"}\r",
							"\r",
							"const expected_keys_in_response_body     = operator_search_schema.items.required;\r",
							"const expected_keys_in_ContactInfo       = operator_search_schema.items.properties.ContactInfo.required;\r",
							"const expected_keys_in_AccessRight       = operator_search_schema.items.properties.AccessRight.required;\r",
							"const expected_keys_in_AdditionalInfo    = operator_search_schema.items.properties.AdditionalInfo.required;\r",
							"const expected_keys_in_AuthorizationInfo = operator_search_schema.items.properties.AuthorizationInfo.required;\r",
							"const expected_keys_in_Dialer            = operator_search_schema.items.properties.AuthorizationInfo.properties.Dialer.items.required;\r",
							"const expected_keys_in_WebRTC            = operator_search_schema.items.properties.WebRTC.required;\r",
							"\r",
							"\r",
							"/* --- TESTS --- */\r",
							"\r",
							"pm.test(`Сheck the active environment is 'new counterparty'`, () => {\r",
							"    pm.expect(pm.environment.name).to.eql(\"new counterparty\");\r",
							"});\r",
							"\r",
							"pm.test(`Successful GET request! Status code is 200`, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Status code is \"OK\"`, function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 5000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test('Schema \"operator?search%5BLogin%5D={{login}}&limit=1\" is valid', function() {\r",
							"    pm.expect(tv4.validate(body, operator_search_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Response body is an array of size [1]\", function () {\r",
							"    pm.expect(body).to.be.an('array');\r",
							"    pm.expect(body).to.have.lengthOf(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Array consists of objects\", function () {\r",
							"    pm.expect(body.every(elem => typeof(elem) === \"object\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(`Response body has all expected keys and length of ${expected_keys_in_response_body.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem).filter(function(key) {\r",
							"            return !expected_keys_in_response_body.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in response did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem).to.be.an('object').that.has.all.keys(expected_keys_in_response_body);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem)).to.have.lengthOf(expected_keys_in_response_body.length);\r",
							"    \r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'ContactInfo' key is an object that has all expected keys and length of ${expected_keys_in_ContactInfo.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem.ContactInfo).filter(function(key) {\r",
							"            return !expected_keys_in_ContactInfo.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in 'ContactInfo' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem.ContactInfo).to.be.an('object').that.has.all.keys(expected_keys_in_ContactInfo);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem.ContactInfo)).to.have.lengthOf(expected_keys_in_ContactInfo.length);\r",
							"    \r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'AccessRight' key is an object that has all expected keys and length of ${expected_keys_in_AccessRight.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem.AccessRight).filter(function(key) {\r",
							"            return !expected_keys_in_AccessRight.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in 'AccessRight' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem.AccessRight).to.be.an('object').that.has.all.keys(expected_keys_in_AccessRight);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem.AccessRight)).to.have.lengthOf(expected_keys_in_AccessRight.length);\r",
							"    \r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'AdditionalInfo' key is an object that has all expected keys and length of ${expected_keys_in_AdditionalInfo.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem.AdditionalInfo).filter(function(key) {\r",
							"            return !expected_keys_in_AdditionalInfo.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in 'AdditionalInfo' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem.AdditionalInfo).to.be.an('object').that.has.all.keys(expected_keys_in_AdditionalInfo);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem.AdditionalInfo)).to.have.lengthOf(expected_keys_in_AdditionalInfo.length);\r",
							"        \r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'AuthorizationInfo' key is an object that has all expected keys and length of ${expected_keys_in_AuthorizationInfo.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem.AuthorizationInfo).filter(function(key) {\r",
							"            return !expected_keys_in_AuthorizationInfo.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in 'AuthorizationInfo' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem.AuthorizationInfo).to.be.an('object').that.has.all.keys(expected_keys_in_AuthorizationInfo);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem.AuthorizationInfo)).to.have.lengthOf(expected_keys_in_AuthorizationInfo.length);\r",
							"    \r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'Dialer' key is an array of objects that have all expected keys and length of object is ${expected_keys_in_Dialer.length}`, function () {\r",
							"    \r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        elem.AuthorizationInfo.Dialer.forEach((element) => {\r",
							"            \r",
							"            let storageTank = Object.keys(element).filter( function(key) {\r",
							"                return !expected_keys_in_Dialer.includes(key)\r",
							"            });\r",
							"            \r",
							"            if (storageTank.length !== 0) {\r",
							"                console.log(`Actual keys received in 'Dialer' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"            }\r",
							"            \r",
							"            pm.expect(element).to.be.an('object').that.has.all.keys(expected_keys_in_Dialer);\r",
							"            pm.expect(storageTank.length).to.eql(0);\r",
							"            \r",
							"            pm.expect(Object.keys(element)).to.have.lengthOf(expected_keys_in_Dialer.length);\r",
							"        \r",
							"        });\r",
							"\r",
							"    })\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(`'WebRTC' key is an object that has all expected keys and length of ${expected_keys_in_WebRTC.length}`, function () {\r",
							"\r",
							"    body.forEach((elem)=> {\r",
							"        \r",
							"        let storageTank = Object.keys(elem.WebRTC).filter( function(key) {\r",
							"            return !expected_keys_in_WebRTC.includes(key)\r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in 'WebRTC' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(elem.WebRTC).to.be.an('object').that.has.all.keys(expected_keys_in_WebRTC);\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"        pm.expect(Object.keys(elem.WebRTC)).to.have.lengthOf(expected_keys_in_WebRTC.length);\r",
							"\r",
							"    })\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(`Value in \"ID\" is a number`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.ID).to.be.a(\"number\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in 'Login' in the response body is a string and is equal to the value from the global collection`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.Login).to.be.a('string');\r",
							"        pm.expect(pm.globals.get(\"login\")).to.be.eql(elem.Login);\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"Surname\" is string`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.Surname).to.be.a(\"string\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"Name\" is string`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.Name).to.be.a(\"string\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"MiddleName\" is string`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.MiddleName).to.be.a(\"string\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"WorkPlaceID\" is a number`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.WorkPlaceID).to.be.a(\"number\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Inserted' key is timestamp\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(isNaN(Date.parse(elem.Inserted))).to.be.false;\r",
							"        pm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(elem.Inserted)).to.be.true;\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ContactInfo' key is an object which has all expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.ContactInfo).to.be.an(\"object\").that.has.all.keys('Email');\r",
							"        pm.expect(elem.ContactInfo.Email).to.be.a(\"string\");\r",
							"        pm.expect(/^\\S+@\\S+\\.\\S+$/.test(elem.ContactInfo.Email)).to.be.true;\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AccessRight' key is an object which has all expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.AccessRight).to.be.an(\"object\").that.has.all.keys('RolesID');\r",
							"        pm.expect(elem.AccessRight.RolesID).to.be.an(\"array\").that.is.not.empty;\r",
							"        pm.expect(elem.AccessRight.RolesID.every(arr_elem => typeof(arr_elem) === \"number\")).to.be.true;\r",
							"        pm.expect(elem.AccessRight.RolesID.every(arr_elem => arr_elem > 0)).to.be.true;  \r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'SMSCampaign' key is null\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.SMSCampaign).to.be.null;\r",
							"    }) \r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AdditionalInfo' key is an object which has all expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.AdditionalInfo).to.be.an(\"object\").that.has.all.keys('Balance');\r",
							"        pm.expect(elem.AdditionalInfo.Balance).to.be.a(\"number\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AuthorizationInfo' key is an object which has all expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.AuthorizationInfo).to.be.an(\"object\").that.has.all.keys('Dialer');\r",
							"        pm.expect(elem.AuthorizationInfo.Dialer).to.be.an(\"array\").that.is.not.empty;\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Dialer' key in 'AuthorizationInfo' object is array of objects with expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        \r",
							"        pm.expect(elem.AuthorizationInfo.Dialer).to.be.an(\"array\").that.is.not.empty;\r",
							"\r",
							"        elem.AuthorizationInfo.Dialer.forEach((element) => {\r",
							"            pm.expect(element).to.be.an(\"object\").that.has.all.keys('Login', 'Password', 'SystemID', 'MediatelExtension');\r",
							"            pm.expect(element.Login).to.be.a(\"string\");\r",
							"            pm.expect(element.Password).to.be.a(\"string\");\r",
							"            pm.expect(element.SystemID).to.be.a(\"number\");\r",
							"            pm.expect(/^auto$|^webrtc-\\d+$|^\\d+$/.test(element.MediatelExtension)).to.be.true;\r",
							"        })\r",
							"\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Updated' key is timestamp\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(isNaN(Date.parse(elem.Updated))).to.be.false;\r",
							"        pm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(elem.Updated)).to.be.true;\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"Alias\" is string`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.Alias).to.be.a(\"string\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"EmploymentDate\" is date`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(isNaN(Date.parse(elem.EmploymentDate))).to.be.false;\r",
							"        pm.expect(/^\\d{4}-\\d{2}-\\d{2}$/.test(elem.EmploymentDate)).to.be.true;\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value of \"AllowToUseLocalDialer\" key is a boolean`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.AllowToUseLocalDialer).to.be.a('boolean');\r",
							"        pm.expect(elem.AllowToUseLocalDialer).to.be.oneOf([true, false]);\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'WebRTC' key is an object which has all expected keys and values\", () => {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.WebRTC).to.be.an(\"object\").that.has.all.keys('Login', 'Realm', 'Password', 'WebsocketAddress');\r",
							"        //console.log(1)\r",
							"        \r",
							"        pm.expect(/^\\d+$/.test(elem.WebRTC.Login)).to.be.true;\r",
							"        //pm.expect(elem.WebRTC.Realm).to.be.oneOf([null, \"webrtc.ua.creditexpress.com\", \"creditkasa-webrtc.creditorro.com\"]);\r",
							"        //console.log(2)\r",
							"\r",
							"        pm.expect(/^[a-z-]*webrtc[a-z-.]+$|null/.test(elem.WebRTC.Realm)).to.be.true;\r",
							"        //console.log(3)\r",
							"\r",
							"        pm.expect(elem.WebRTC.Password).to.be.a(\"string\");\r",
							"        //console.log(4)\r",
							"\r",
							"        //pm.expect(elem.WebRTC.WebsocketAddress).to.be.oneOf([null, \"wss://webrtc.ua.creditexpress.com/ws\", \"wss://creditkasa-webrtc.creditorro.com/ws\"]);\r",
							"        pm.expect(/^wss:\\/\\/[a-z-]*webrtc[a-z-.]+\\/ws$|null/.test(elem.WebRTC.WebsocketAddress)).to.be.true;\r",
							"        //console.log(5)\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value in \"AgentTypeID\" is a number`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.AgentTypeID).to.be.a(\"number\");\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(`Value of \"IsTemporaryPassword\" key is a boolean`, function () {\r",
							"    body.forEach((elem) => {\r",
							"        pm.expect(elem.IsTemporaryPassword).to.be.a('boolean');\r",
							"        pm.expect(elem.IsTemporaryPassword).to.be.oneOf([true, false]);\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authority",
						"value": "{{authority}}"
					},
					{
						"key": "pragma",
						"value": "no-cache"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\""
					},
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "uniquehashcaseid",
						"value": "undefined"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"
					},
					{
						"key": "origin",
						"value": "{{origin}}"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "referer",
						"value": "{{referer}}"
					},
					{
						"key": "accept-language",
						"value": "ru,de;q=0.9,uk;q=0.8,hr;q=0.7,hu;q=0.6,en;q=0.5,en-AU;q=0.4,en-GB-oxendict;q=0.3,en-GB;q=0.2,en-IN;q=0.1,en-CA;q=0.1,en-NZ;q=0.1,en-US;q=0.1,en-ZA;q=0.1"
					},
					{
						"key": "cookie",
						"value": "{{cookie}}"
					}
				],
				"url": {
					"raw": "{{request_url}}/api/operator?search%5BLogin%5D={{login}}&limit=1",
					"host": [
						"{{request_url}}"
					],
					"path": [
						"api",
						"operator"
					],
					"query": [
						{
							"key": "search%5BLogin%5D",
							"value": "{{login}}"
						},
						{
							"key": "limit",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/admin/contragent-search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let origin;\r",
							"\r",
							"if (/\\.ru\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.ru.*$/s, \".ru\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"if(/\\.com\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.com.*$/s, \".com\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"\r",
							"let referer = origin + \"/\";\r",
							"pm.environment.set(\"referer\", referer);\r",
							"\r",
							"\r",
							"let request_url    = origin.split('.');\r",
							"    request_url[0] = request_url[0] + \"-\" + pm.globals.get(\"host\");\r",
							"    request_url    = request_url.join('.');\r",
							"pm.environment.set(\"request_url\", request_url);\r",
							"\r",
							"\r",
							"let authority = request_url.replace(/^http:\\/\\/|^https:\\/\\//, \"\");\r",
							"pm.environment.set(\"authority\", authority);\r",
							"\r",
							"\r",
							"//----------------------------------------------//\r",
							"\r",
							"\r",
							"const payload_keys = [\"Name\", \"GroupName\", \"ShortName\", \"ShortNameEng\", \"Creditor\", \"PrimaryCreditor\", \"ContractType\", \"ContractNumber\", \"ContragentTaxNumber\", \r",
							"                      \"ContragentInfoEmail\", \"ClientInfoPhone\", \"ContragentInfoPostAddress\", \"ContragentInfoAddress\", \"WebSite\", \"IsActive\", \"Priority\", \r",
							"\t\t\t\t\t  \"AutoLetter\", \"BankAccountRequired\", \"PersonalAccountEnabled\", \"IsAutoCall\", \"IsAutoSms\", \"ShowPrimaryCreditor\", \"MinAmountToPrint\", \"AgreementDate\"];\r",
							"\r",
							"class Terms {\r",
							"    \r",
							"    static dictionary = {\r",
							"        \"Name\"                      : \"Название контрагента (Counterparty's name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"GroupName\"                 : \"Название группы контрагента (Counterparty's group name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ShortName\"                 : \"Сокращенное название контрагента (Кириллица) - 1234567890\",\r",
							"        \"ShortNameEng\"              : \"Counterparty short - Latin - 1234567890\",\r",
							"        \"Creditor\"                  : \"Кредитор (Lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"PrimaryCreditor\"           : \"Первоначальный кредитор (Original lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContractType\"              : \"Тип договора (Сontract) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContractNumber\"            : \"Номер договора / Агентский договор № (Contract No.) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContragentTaxNumber\"       : \"ОГРН / ИНН (Tax number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContragentInfoEmail\"       : \"yaroslav.plias@creditexpress.ua\",\r",
							"        \"ClientInfoPhone\"           : \"Контактный телефон (Contact number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContragentInfoPostAddress\" : \"Адрес почтовый (Mailing address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"ContragentInfoAddress\"     : \"Адрес места нахождения (Location address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\",\r",
							"        \"WebSite\"                   : \"http://lurkmore.to/%D0%98%D0%B7_%D1%81%D0%BF%D0%B8%D1%87%D0%B5%D0%BA_%D0%B8_%D0%B6%D0%B5%D0%BB%D1%83%D0%B4%D0%B5%D0%B9\"\r",
							"\t}\r",
							"\r",
							"    static state = {\r",
							"        \"IsActive\"                  : [\"0\", \"1\"],\r",
							"        \"Priority\"                  : [\"1\", \"2\", \"3\", \"4\", \"5\"],\r",
							"        \"AutoLetter\"                : [\"0\", \"1\"],\r",
							"        \"BankAccountRequired\"       : [\"0\", \"1\"],\r",
							"        \"PersonalAccountEnabled\"    : [\"0\", \"1\"],\r",
							"        \"IsAutoCall\"                : [\"0\", \"1\"],\r",
							"        \"IsAutoSms\"                 : [\"0\", \"1\"],\r",
							"        \"ShowPrimaryCreditor\"       : [\"0\", \"1\"]\r",
							"    }\r",
							"\r",
							"    static endpoints = {\r",
							"        \"MinAmountToPrint\"          : 1001,\r",
							"        \"AgreementDate\"             : new Date(1901, 0, 1)\r",
							"    }\r",
							"\r",
							"    static random_integer(last_number) {\r",
							"\t\treturn Math.floor(Math.random() * Math.floor(last_number));\r",
							"\t}\r",
							"\r",
							"    static random_date(starting_date, closing_date) {\r",
							"        return new Date(starting_date.getTime() + Math.random() * (closing_date.getTime() - starting_date.getTime()));\r",
							"    }\r",
							"}\r",
							"\r",
							"class payload_generator extends Terms {\r",
							"\r",
							"    constructor(key, value) {\r",
							"        super();\r",
							"        this.key   = key;\r",
							"        this.value = value;\r",
							"    }\r",
							"\r",
							"    static create(key) {\r",
							"\r",
							"        if (this.dictionary.hasOwnProperty(key)) {\r",
							"\t\t\treturn new payload_generator(key, this.dictionary[key]);\r",
							"        }\r",
							"\r",
							"        if (this.state.hasOwnProperty(key)) {\r",
							"            return new payload_generator(key, this.state[key][this.random_integer(this.state[key].length)]);\r",
							"        }\r",
							"\r",
							"        if (key === \"MinAmountToPrint\") {\r",
							"            return new payload_generator(key, this.random_integer(this.endpoints[key]));\r",
							"\t\t}\r",
							"\r",
							"        if (key === \"AgreementDate\") {\r",
							"            let chosen_date = this.random_date(this.endpoints[key], new Date());\r",
							"\t\t\t    chosen_date = chosen_date.getFullYear() + '-' + ('0' + (chosen_date.getMonth() + 1)).slice(-2) + '-' + ('0' + chosen_date.getDate()).slice(-2);\r",
							"\r",
							"            return new payload_generator(key, chosen_date);\r",
							"        }\r",
							"\r",
							"    }\r",
							"\r",
							"}\r",
							"\r",
							"payload_keys.forEach((value) => {\r",
							"    let entries = payload_generator.create(value);\r",
							"    pm.environment.set(entries.key, entries.value);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();\r",
							"const AdditionalInfo = body.AdditionalInfo;\r",
							"const letterType = body.letterType;\r",
							"\r",
							"const expected_keys_in_response_body = [\"ID\", \"Name\", \"ShortName\", \"SegmentID\", \"CityCode\", \"City\", \"Street\", \"PhoneNumber\", \"FaxNumber\", \"AuthorizedForPayment\",\r",
							"    \"AuthorizedForPaymentShort\", \"ReceivingBank\", \"BranchBank\", \"BankId\", \"TaxNumber\", \"AuthId\", \"Password\",\r",
							"    \"LetterPhoneId\", \"AutoLetter\", \"BankAccountRequired\", \"PersonalAccountEnabled\", \"PromiseDays\",\r",
							"    \"DefaultBookingOrderID\", \"WebSite\", \"GroupID\", \"IsActive\", \"SMSTemplateID\", \"Priority\", \"ShortNameEng\",\r",
							"    \"PaymentDetails\", \"Inserted\", \"Updated\", \"MultiInvoiceBookingTypeID\", \"AdditionalInfo\", \"AutoReportTemplateID\",\r",
							"    \"EmailTemplateID\", \"IsAutoCall\", \"IsAutoSms\", \"ResponsibleUserID\", \"ActualOndateAggregationLevelID\",\r",
							"    \"MaxPaymentDateAggregationLevelID\", \"Creditor\", \"InterestOrderID\", \"GroupName\", \"MFO\", \"OKPO\",\r",
							"    \"systemPhones\", \"letterType\", \"DebtorFeeSetID\", \"AutoCloseOrderID\"];\r",
							"\r",
							"const expected_keys_in_AdditionalInfo = [\"ContractType\", \"AgreementDate\", \"ContractNumber\", \"ClientInfoPhone\",\r",
							"    \"PrimaryCreditor\", \"MinAmountToPrint\", \"ContragentInfoEmail\", \"ContragentTaxNumber\", \"ShowPrimaryCreditor\",\r",
							"    \"ContragentInfoAddress\", \"ContragentInfoPostAddress\", \"MultiInvoiceBookingType\"];\r",
							"\r",
							"const expected_keys_in_letterType = [\"LetterTypeAliasID\", \"LetterTypeID\"];\r",
							"\r",
							"\r",
							"const contragent_search_schema = {\r",
							"\r",
							"    \"title\": `Обзор клиента / SELECT * FROM \"Data\".\"Contragent\";`,\r",
							"    \"required\": [\r",
							"        \"ID\",\r",
							"        \"Name\",\r",
							"        \"ShortName\",\r",
							"        \"SegmentID\",\r",
							"        \"CityCode\",\r",
							"        \"City\",\r",
							"        \"Street\",\r",
							"        \"PhoneNumber\",\r",
							"        \"FaxNumber\",\r",
							"        \"AuthorizedForPayment\",\r",
							"        \"AuthorizedForPaymentShort\",\r",
							"        \"ReceivingBank\",\r",
							"        \"BranchBank\",\r",
							"        \"BankId\",\r",
							"        \"TaxNumber\",\r",
							"        \"AuthId\",\r",
							"        \"Password\",\r",
							"        \"LetterPhoneId\",\r",
							"        \"AutoLetter\",\r",
							"        \"BankAccountRequired\",\r",
							"        \"PersonalAccountEnabled\",\r",
							"        \"PromiseDays\",\r",
							"        \"DefaultBookingOrderID\",\r",
							"        \"WebSite\",\r",
							"        \"GroupID\",\r",
							"        \"IsActive\",\r",
							"        \"SMSTemplateID\",\r",
							"        \"Priority\",\r",
							"        \"ShortNameEng\",\r",
							"        \"PaymentDetails\",\r",
							"        \"Inserted\",\r",
							"        \"Updated\",\r",
							"        \"MultiInvoiceBookingTypeID\",\r",
							"        \"AdditionalInfo\",\r",
							"        \"AutoReportTemplateID\",\r",
							"        \"EmailTemplateID\",\r",
							"        \"IsAutoCall\",\r",
							"        \"IsAutoSms\",\r",
							"        \"ResponsibleUserID\",\r",
							"        \"ActualOndateAggregationLevelID\",\r",
							"        \"MaxPaymentDateAggregationLevelID\",\r",
							"        \"Creditor\",\r",
							"        \"InterestOrderID\",\r",
							"        \"GroupName\",\r",
							"        \"MFO\",\r",
							"        \"OKPO\",\r",
							"        \"systemPhones\",\r",
							"        \"letterType\",\r",
							"        \"DebtorFeeSetID\",\r",
							"        \"AutoCloseOrderID\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"ID\": {\r",
							"            \"title\": \"№ Контрагента\",\r",
							"            \"default\": 99,\r",
							"            \"examples\": [\r",
							"                3378\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Name\": {\r",
							"            \"title\": \"Название контрагента\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Название контрагента (Counterparty's name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ShortName\": {\r",
							"            \"title\": \"Сокращ. название Контрагента (кириллица)\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Сокращенное имя контрагента (Кириллица) - 1234567890\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShortName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"SegmentID\": {\r",
							"            \"title\": \"Тип Контрагента / Сегменты контрагентов\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/SegmentID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"CityCode\": {\r",
							"            \"title\": \"CityCode\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/CityCode\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"City\": {\r",
							"            \"title\": \"City\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/City\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Street\": {\r",
							"            \"title\": \"Street\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Street\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"PhoneNumber\": {\r",
							"            \"title\": \"PhoneNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PhoneNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"FaxNumber\": {\r",
							"            \"title\": \"FaxNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/FaxNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthorizedForPayment\": {\r",
							"            \"title\": \"AuthorizedForPayment\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthorizedForPayment\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthorizedForPaymentShort\": {\r",
							"            \"title\": \"AuthorizedForPaymentShort\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthorizedForPaymentShort\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"ReceivingBank\": {\r",
							"            \"title\": \"ReceivingBank\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ReceivingBank\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"BranchBank\": {\r",
							"            \"title\": \"BranchBank\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BranchBank\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"BankId\": {\r",
							"            \"title\": \"BankId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BankId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"TaxNumber\": {\r",
							"            \"title\": \"TaxNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/TaxNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthId\": {\r",
							"            \"title\": \"AuthId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Password\": {\r",
							"            \"title\": \"Password\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Password\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"LetterPhoneId\": {\r",
							"            \"title\": \"LetterPhoneId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/LetterPhoneId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AutoLetter\": {\r",
							"            \"title\": \"Печать писем из системы\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AutoLetter\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"BankAccountRequired\": {\r",
							"            \"title\": \"Требовать банковский счет\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BankAccountRequired\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"PersonalAccountEnabled\": {\r",
							"            \"title\": \"Личный кабинет\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PersonalAccountEnabled\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"PromiseDays\": {\r",
							"            \"title\": \"PromiseDays\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PromiseDays\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"DefaultBookingOrderID\": {\r",
							"            \"title\": \"DefaultBookingOrderID\",\r",
							"            \"default\": 9,\r",
							"            \"enum\": [9],\r",
							"            \"examples\": [\r",
							"                9\r",
							"            ],\r",
							"            \"$id\": \"#/properties/DefaultBookingOrderID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"WebSite\": {\r",
							"            \"title\": \"Ссылка на доп. информацию\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"http://lurkmore.to/%D0%98%D0%B7_%D1%81%D0%BF%D0%B8%D1%87%D0%B5%D0%BA_%D0%B8_%D0%B6%D0%B5%D0%BB%D1%83%D0%B4%D0%B5%D0%B9\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebSite\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"GroupID\": {\r",
							"            \"title\": \"GroupID\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                422\r",
							"            ],\r",
							"            \"$id\": \"#/properties/GroupID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"IsActive\": {\r",
							"            \"title\": \"Статус\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsActive\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"SMSTemplateID\": {\r",
							"            \"title\": \"SMSTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/SMSTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Priority\": {\r",
							"            \"title\": \"Приоритет Контрагента\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1, 2, 3, 4, 5],\r",
							"            \"examples\": [\r",
							"                5\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Priority\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ShortNameEng\": {\r",
							"            \"title\": \"Сокращ. название Контрагента (латиница)\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Counterparty short - Latin - 1234567890\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShortNameEng\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"PaymentDetails\": {\r",
							"            \"title\": \"PaymentDetails\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PaymentDetails\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Inserted\": {\r",
							"            \"title\": \"Inserted\",\r",
							"            \"default\": \"SELECT now();\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2020-08-18 09:32:50.51036\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Inserted\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Updated\": {\r",
							"            \"title\": \"Updated\",\r",
							"            \"default\": \"SELECT now();\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2020-08-18 09:32:50.51036\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Updated\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MultiInvoiceBookingTypeID\": {\r",
							"            \"title\": \"MultiInvoiceBookingTypeID\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MultiInvoiceBookingTypeID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"AdditionalInfo\": {\r",
							"            \"title\": \"AdditionalInfo\",\r",
							"            \"required\": [\r",
							"                \"ContractType\",\r",
							"                \"AgreementDate\",\r",
							"                \"ContractNumber\",\r",
							"                \"ClientInfoPhone\",\r",
							"                \"PrimaryCreditor\",\r",
							"                \"MinAmountToPrint\",\r",
							"                \"ContragentInfoEmail\",\r",
							"                \"ContragentTaxNumber\",\r",
							"                \"ShowPrimaryCreditor\",\r",
							"                \"ContragentInfoAddress\",\r",
							"                \"ContragentInfoPostAddress\",\r",
							"                \"MultiInvoiceBookingType\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"ContractType\": {\r",
							"                    \"title\": \"Тип договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Тип договора (Сontract) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContractType\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"AgreementDate\": {\r",
							"                    \"title\": \"Дата договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"2015-10-25\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/AgreementDate\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContractNumber\": {\r",
							"                    \"title\": \"Номер договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Номер договора / Агентский договор № (Contract No.) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContractNumber\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ClientInfoPhone\": {\r",
							"                    \"title\": \"Контактный телефон\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Контактный телефон (Contact number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ClientInfoPhone\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"PrimaryCreditor\": {\r",
							"                    \"title\": \"Первоначальный кредитор\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Первоначальный кредитор (Original lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/PrimaryCreditor\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"MinAmountToPrint\": {\r",
							"                    \"title\": \"Минимальная сумма для печати писем\",\r",
							"                    \"default\": \"0\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"227\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/MinAmountToPrint\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoEmail\": {\r",
							"                    \"title\": \"Адрес электронной почты\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"yaroslav.plias@creditexpress.ua\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoEmail\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentTaxNumber\": {\r",
							"                    \"title\": \"ОГРН / ИНН\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"ОГРН / ИНН (Tax number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentTaxNumber\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ShowPrimaryCreditor\": {\r",
							"                    \"title\": \"Первоначальный кредитор\",\r",
							"                    \"default\": \"0\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"enum\": [\"0\", \"1\"],\r",
							"                    \"examples\": [\r",
							"                        \"1\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ShowPrimaryCreditor\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoAddress\": {\r",
							"                    \"title\": \"Адрес места нахождения\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Адрес места нахождения (Location address) .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoAddress\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoPostAddress\": {\r",
							"                    \"title\": \"Адрес почтовый\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Адрес почтовый (Mailing address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoPostAddress\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"MultiInvoiceBookingType\": {\r",
							"                    \"title\": \"MultiInvoiceBookingType\",\r",
							"                    \"default\": \"Разносим на несколько инвойсов\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"enum\": [\"Разносим на несколько инвойсов\"],\r",
							"                    \"examples\": [\r",
							"                        \"Разносим на несколько инвойсов\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/MultiInvoiceBookingType\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"$id\": \"#/properties/AdditionalInfo\",\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false\r",
							"        },\r",
							"        \"AutoReportTemplateID\": {\r",
							"            \"title\": \"AutoReportTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AutoReportTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"EmailTemplateID\": {\r",
							"            \"title\": \"EmailTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/EmailTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"IsAutoCall\": {\r",
							"            \"title\": \"Авто очереди звонков\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsAutoCall\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"IsAutoSms\": {\r",
							"            \"title\": \"Авто очереди СМС\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsAutoSms\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ResponsibleUserID\": {\r",
							"            \"title\": \"Менеджер проекта\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                7017\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ResponsibleUserID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ActualOndateAggregationLevelID\": {\r",
							"            \"title\": \"ActualOndateAggregationLevelID\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ActualOndateAggregationLevelID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"MaxPaymentDateAggregationLevelID\": {\r",
							"            \"title\": \"MaxPaymentDateAggregationLevelID\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MaxPaymentDateAggregationLevelID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Creditor\": {\r",
							"            \"title\": \"Кредитор\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Кредитор (Lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Creditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"InterestOrderID\": {\r",
							"            \"title\": \"InterestOrderID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/InterestOrderID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"GroupName\": {\r",
							"            \"title\": \"Название группы контрагента\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Название группы контрагента (Counterparty's group name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/GroupName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MFO\": {\r",
							"            \"title\": \"MFO\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MFO\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"OKPO\": {\r",
							"            \"title\": \"OKPO\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/OKPO\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"systemPhones\": {\r",
							"            \"title\": \"systemPhones\",\r",
							"            \"$id\": \"#/properties/systemPhones\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"letterType\": {\r",
							"            \"title\": \"letterType\",\r",
							"            \"items\": {\r",
							"                \"title\": \"LetterTypeAliasID, LetterTypeID\",\r",
							"                \"required\": [\r",
							"                    \"LetterTypeAliasID\",\r",
							"                    \"LetterTypeID\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"LetterTypeAliasID\": {\r",
							"                        \"title\": \"LetterTypeAliasID\",\r",
							"                        \"default\": 1,\r",
							"                        \"enum\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\r",
							"                        \"examples\": [\r",
							"                            1\r",
							"                        ],\r",
							"                        \"$id\": \"#/properties/letterType/items/properties/LetterTypeAliasID\",\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"LetterTypeID\": {\r",
							"                        \"title\": \"LetterTypeID\",\r",
							"                        \"default\": null,\r",
							"                        \"enum\": [null],\r",
							"                        \"examples\": [\r",
							"                            null\r",
							"                        ],\r",
							"                        \"$id\": \"#/properties/letterType/items/properties/LetterTypeID\",\r",
							"                        \"type\": \"null\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"##/properties/letterType/items\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"$id\": \"#/properties/letterType\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"DebtorFeeSetID\": {\r",
							"            \"title\": \"DebtorFeeSetID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/DebtorFeeSetID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AutoCloseOrderID\": {\r",
							"            \"title\": \"AutoCloseOrderID\",\r",
							"            \"items\": {\r",
							"                \"title\": \"AutoCloseOrderID\",\r",
							"                \"default\": 0,\r",
							"                \"enum\": [4],\r",
							"                \"examples\": [\r",
							"                    4\r",
							"                ],\r",
							"                \"$id\": \"#/properties/AutoCloseOrderID/items\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"$id\": \"#/properties/AutoCloseOrderID\",\r",
							"            \"type\": \"array\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"/api/admin/contragent-search\",\r",
							"    \"type\": \"object\",\r",
							"    \"additionalProperties\": false,\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"const AdditionalInfo_schema = {\r",
							"\r",
							"    \"title\": \"Nested object 'AdditionalInfo'\",\r",
							"    \"required\": [\r",
							"        \"ContractType\",\r",
							"        \"AgreementDate\",\r",
							"        \"ContractNumber\",\r",
							"        \"ClientInfoPhone\",\r",
							"        \"PrimaryCreditor\",\r",
							"        \"MinAmountToPrint\",\r",
							"        \"ContragentInfoEmail\",\r",
							"        \"ContragentTaxNumber\",\r",
							"        \"ShowPrimaryCreditor\",\r",
							"        \"ContragentInfoAddress\",\r",
							"        \"ContragentInfoPostAddress\",\r",
							"        \"MultiInvoiceBookingType\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"ContractType\": {\r",
							"            \"title\": \"Тип договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Тип договора (Сontract) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContractType\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"AgreementDate\": {\r",
							"            \"title\": \"Дата договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2014-04-30\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AgreementDate\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContractNumber\": {\r",
							"            \"title\": \"Номер договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Номер договора / Агентский договор № (Contract No.) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContractNumber\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ClientInfoPhone\": {\r",
							"            \"title\": \"Контактный телефон\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Контактный телефон (Contact number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ClientInfoPhone\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"PrimaryCreditor\": {\r",
							"            \"title\": \"Первоначальный кредитор\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Первоначальный кредитор (Original lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PrimaryCreditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MinAmountToPrint\": {\r",
							"            \"title\": \"Минимальная сумма для печати писем\",\r",
							"            \"default\": \"0\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"53\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MinAmountToPrint\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoEmail\": {\r",
							"            \"title\": \"Адрес электронной почты\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"yaroslav.plias@creditexpress.ua\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoEmail\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentTaxNumber\": {\r",
							"            \"title\": \"ОГРН / ИНН\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"ОГРН / ИНН (Tax number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentTaxNumber\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ShowPrimaryCreditor\": {\r",
							"            \"title\": \"Первоначальный кредитор\",\r",
							"            \"default\": \"0\",\r",
							"            \"enum\": [\"0\", \"1\"],\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"0\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShowPrimaryCreditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoAddress\": {\r",
							"            \"title\": \"Адрес места нахождения\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Адрес места нахождения (Location address) .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoPostAddress\": {\r",
							"            \"title\": \"Адрес почтовый\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Адрес почтовый (Mailing address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoPostAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MultiInvoiceBookingType\": {\r",
							"            \"title\": \"MultiInvoiceBookingType\",\r",
							"            \"default\": \"Разносим на несколько инвойсов\",\r",
							"            \"enum\": [\"Разносим на несколько инвойсов\"],\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Разносим на несколько инвойсов\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MultiInvoiceBookingType\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"/api/admin/contragent-search.AdditionalInfo\",\r",
							"    \"type\": \"object\",\r",
							"    \"additionalProperties\": false,\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"}\r",
							"\r",
							"\r",
							"/* --- TESTS --- */\r",
							"\r",
							"pm.test(`Сheck the active environment is 'new counterparty'`, () => {\r",
							"    pm.expect(pm.environment.name).to.eql(\"new counterparty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request! Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Status code is \"OK\"`, function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 5000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test('Schema \"contragent-search\" is valid', function () {\r",
							"    pm.expect(tv4.validate(body, contragent_search_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test('Schema \"contragent-search.AdditionalInfo\" is valid', function () {\r",
							"    pm.expect(tv4.validate(AdditionalInfo, AdditionalInfo_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is an object that has all expected keys\", function () {\r",
							"\r",
							"    pm.expect(body).to.be.an('object').that.has.all.keys(expected_keys_in_response_body);\r",
							"\r",
							"    let storageTank = Object.keys(body).filter(function (key) {\r",
							"        return !expected_keys_in_response_body.includes(key)\r",
							"    });\r",
							"\r",
							"    if (storageTank.length !== 0) {\r",
							"        console.log(`Actual keys received in response did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"    }\r",
							"\r",
							"    pm.expect(storageTank.length).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(`Response body has length of ${expected_keys_in_response_body.length}`, function () {\r",
							"    pm.expect(Object.keys(body)).to.have.lengthOf(expected_keys_in_response_body.length);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"'AdditionalInfo' key is an object that has all expected keys\", function () {\r",
							"\r",
							"    pm.expect(AdditionalInfo).to.be.an('object').that.has.all.keys(expected_keys_in_AdditionalInfo);\r",
							"\r",
							"    let storageTank = Object.keys(AdditionalInfo).filter(function (key) {\r",
							"        return !expected_keys_in_AdditionalInfo.includes(key)\r",
							"    });\r",
							"\r",
							"    if (storageTank.length !== 0) {\r",
							"        console.log(`Actual keys received in 'AdditionalInfo' did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"    }\r",
							"\r",
							"    pm.expect(storageTank.length).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(`'AdditionalInfo' key has length of ${expected_keys_in_AdditionalInfo.length}`, function () {\r",
							"    pm.expect(Object.keys(AdditionalInfo)).to.have.lengthOf(expected_keys_in_AdditionalInfo.length);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(`Object elements in the array of 'letterType' key has length of ${expected_keys_in_letterType.length} and expected values`, function () {\r",
							"\r",
							"    pm.expect(letterType).to.be.an('array');\r",
							"\r",
							"    letterType.forEach((elem) => {\r",
							"        pm.expect(elem).to.be.an('object').that.has.all.keys(expected_keys_in_letterType);\r",
							"        pm.expect(Object.keys(elem)).to.have.lengthOf(expected_keys_in_letterType.length);\r",
							"\r",
							"        pm.expect(elem.LetterTypeAliasID).to.be.above(0);\r",
							"        pm.expect(elem.LetterTypeAliasID).to.be.below(16);\r",
							"        pm.expect(elem.LetterTypeID).to.be.null;\r",
							"\r",
							"\r",
							"        let storageTank = Object.keys(elem).filter(function (key) {\r",
							"            return !expected_keys_in_letterType.includes(key)\r",
							"        });\r",
							"\r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in the array of 'letterType' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"\r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ID' key is number\", () => {\r",
							"    pm.expect(body.ID).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Name' key has expected value\", () => {\r",
							"    pm.expect(body.Name).to.eql(pm.environment.get(\"Name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ShortName' key has expected value\", () => {\r",
							"    pm.expect(body.ShortName).to.eql(pm.environment.get(\"ShortName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'SegmentID' key has expected value\", () => {\r",
							"    pm.expect(body.SegmentID).to.eql(pm.environment.get(\"SegmentID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'CityCode' key is null\", () => {\r",
							"    pm.expect(body.CityCode).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'City' key is null\", () => {\r",
							"    pm.expect(body.City).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Street' key is null\", () => {\r",
							"    pm.expect(body.Street).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'PhoneNumber' key is null\", () => {\r",
							"    pm.expect(body.PhoneNumber).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'FaxNumber' key is null\", () => {\r",
							"    pm.expect(body.FaxNumber).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AuthorizedForPayment' key is null\", () => {\r",
							"    pm.expect(body.AuthorizedForPayment).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AuthorizedForPaymentShort' key is null\", () => {\r",
							"    pm.expect(body.AuthorizedForPaymentShort).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ReceivingBank' key is null\", () => {\r",
							"    pm.expect(body.ReceivingBank).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'BranchBank' key is null\", () => {\r",
							"    pm.expect(body.BranchBank).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'BankId' key is null\", () => {\r",
							"    pm.expect(body.BankId).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'TaxNumber' key is null\", () => {\r",
							"    pm.expect(body.TaxNumber).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AuthId' key is null\", () => {\r",
							"    pm.expect(body.AuthId).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Password' key is null\", () => {\r",
							"    pm.expect(body.Password).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'LetterPhoneId' key is null\", () => {\r",
							"    pm.expect(body.LetterPhoneId).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'AutoLetter' key has expected value\", () => {\r",
							"    pm.expect(String(body.AutoLetter)).to.eql(String(pm.environment.get(\"AutoLetter\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'BankAccountRequired' key has expected value\", () => {\r",
							"    pm.expect(String(body.BankAccountRequired)).to.eql(String(pm.environment.get(\"BankAccountRequired\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'PersonalAccountEnabled' key has expected value\", () => {\r",
							"    pm.expect(String(body.PersonalAccountEnabled)).to.eql(String(pm.environment.get(\"PersonalAccountEnabled\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'PromiseDays' key has expected value\", () => {\r",
							"    pm.expect(body.PromiseDays).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'DefaultBookingOrderID' key has expected value\", () => {\r",
							"    pm.expect(body.DefaultBookingOrderID).to.eql(9);\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'WebSite' key has expected value\", () => {\r",
							"    pm.expect(body.WebSite).to.eql(pm.environment.get(\"WebSite\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'GroupID' key is number\", () => {\r",
							"    pm.expect(body.GroupID).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'IsActive' key has expected value\", () => {\r",
							"    pm.expect(String(body.IsActive)).to.eql(String(pm.environment.get(\"IsActive\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'SMSTemplateID' key is null\", () => {\r",
							"    pm.expect(body.SMSTemplateID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Priority' key has expected value\", () => {\r",
							"    pm.expect(String(body.Priority)).to.eql(String(pm.environment.get(\"Priority\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ShortNameEng' key has expected value\", () => {\r",
							"    pm.expect(body.ShortNameEng).to.eql(pm.environment.get(\"ShortNameEng\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'PaymentDetails' key is null\", () => {\r",
							"    pm.expect(body.PaymentDetails).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Inserted' key is timestamp\", () => {\r",
							"    pm.expect(isNaN(Date.parse(body.Inserted))).to.be.false;\r",
							"    pm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(body.Inserted)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Updated' key is timestamp\", () => {\r",
							"    pm.expect(isNaN(Date.parse(body.Updated))).to.be.false;\r",
							"    pm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(body.Updated)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'MultiInvoiceBookingTypeID' key has expected value\", () => {\r",
							"    pm.expect(body.MultiInvoiceBookingTypeID).to.eql(1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContractType' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContractType).to.eql(pm.environment.get(\"ContractType\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'AgreementDate' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.AgreementDate).to.eql(pm.environment.get(\"AgreementDate\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContractNumber' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContractNumber).to.eql(pm.environment.get(\"ContractNumber\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ClientInfoPhone' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ClientInfoPhone).to.eql(pm.environment.get(\"ClientInfoPhone\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'PrimaryCreditor' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.PrimaryCreditor).to.eql(pm.environment.get(\"PrimaryCreditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'MinAmountToPrint' key has expected value\", () => {\r",
							"    pm.expect(String(AdditionalInfo.MinAmountToPrint)).to.eql(String(pm.environment.get(\"MinAmountToPrint\")));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoEmail' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContragentInfoEmail).to.eql(pm.environment.get(\"ContragentInfoEmail\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentTaxNumber' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContragentTaxNumber).to.eql(pm.environment.get(\"ContragentTaxNumber\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ShowPrimaryCreditor' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ShowPrimaryCreditor).to.eql(pm.environment.get(\"ShowPrimaryCreditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoAddress' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContragentInfoAddress).to.eql(pm.environment.get(\"ContragentInfoAddress\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoPostAddress' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.ContragentInfoPostAddress).to.eql(pm.environment.get(\"ContragentInfoPostAddress\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'MultiInvoiceBookingType' key has expected value\", () => {\r",
							"    pm.expect(AdditionalInfo.MultiInvoiceBookingType).to.eql(\"Разносим на несколько инвойсов\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Value of 'AutoReportTemplateID' key is null\", () => {\r",
							"    pm.expect(body.AutoReportTemplateID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'EmailTemplateID' key is null\", () => {\r",
							"    pm.expect(body.EmailTemplateID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'IsAutoCall' key has expected value\", () => {\r",
							"    pm.expect(String(body.IsAutoCall)).to.eql(String(pm.environment.get(\"IsAutoCall\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'IsAutoSms' key has expected value\", () => {\r",
							"    pm.expect(String(body.IsAutoSms)).to.eql(String(pm.environment.get(\"IsAutoSms\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ResponsibleUserID' key has expected value\", () => {\r",
							"    pm.expect(body.ResponsibleUserID).to.eql(pm.environment.get(\"ResponsibleUserID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'ActualOndateAggregationLevelID' key has expected value\", () => {\r",
							"    pm.expect(body.ActualOndateAggregationLevelID).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'MaxPaymentDateAggregationLevelID' key has expected value\", () => {\r",
							"    pm.expect(body.MaxPaymentDateAggregationLevelID).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'Creditor' key has expected value\", () => {\r",
							"    pm.expect(body.Creditor).to.eql(pm.environment.get(\"Creditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'InterestOrderID' key is null\", () => {\r",
							"    pm.expect(body.InterestOrderID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'GroupName' key has expected value\", () => {\r",
							"    pm.expect(body.GroupName).to.eql(pm.environment.get(\"GroupName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'MFO' key is null\", () => {\r",
							"    pm.expect(body.MFO).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'OKPO' key is null\", () => {\r",
							"    pm.expect(body.OKPO).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"'systemPhones' key is an empty array\", () => {\r",
							"    pm.expect(body.systemPhones).to.be.an(\"array\");\r",
							"    pm.expect(body.systemPhones).to.have.lengthOf(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Value of 'DebtorFeeSetID' key is null\", () => {\r",
							"    pm.expect(body.DebtorFeeSetID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"'AutoCloseOrderID' key is an array having length of 1. Default element: 4\", () => {\r",
							"    pm.expect(body.AutoCloseOrderID).to.be.an(\"array\");\r",
							"    pm.expect(body.AutoCloseOrderID).to.have.lengthOf(1);\r",
							"    pm.expect(body.AutoCloseOrderID[0]).to.eql(4);\r",
							"});\r",
							"\r",
							"pm.test(\"'ID'(ContrahensID) was recorded to the global collection\", function () {\r",
							"    pm.globals.set(\"ContrahensID\", body.ID);\r",
							"    pm.expect(body.ID).to.eql(pm.globals.get(\"ContrahensID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authority",
						"value": "{{authority}}"
					},
					{
						"key": "pragma",
						"value": "no-cache"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\""
					},
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "uniquehashcaseid",
						"value": "undefined"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"
					},
					{
						"key": "content-type",
						"value": "application/json;charset=UTF-8"
					},
					{
						"key": "origin",
						"value": "{{origin}}"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "referer",
						"value": "{{referer}}"
					},
					{
						"key": "accept-language",
						"value": "ru,de;q=0.9,uk;q=0.8,hr;q=0.7,hu;q=0.6,en;q=0.5,en-AU;q=0.4,en-GB-oxendict;q=0.3,en-GB;q=0.2,en-IN;q=0.1,en-CA;q=0.1,en-NZ;q=0.1,en-US;q=0.1,en-ZA;q=0.1"
					},
					{
						"key": "cookie",
						"value": "{{cookie}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\": \"{{Name}}\",\r\n    \"GroupName\": \"{{GroupName}}\",\r\n    \"AutoLetter\": \"{{AutoLetter}}\",\r\n    \"BankAccountRequired\": \"{{BankAccountRequired}}\",\r\n    \"PersonalAccountEnabled\": \"{{PersonalAccountEnabled}}\",\r\n    \"ShortName\": \"{{ShortName}}\",\r\n    \"SegmentID\": \"{{SegmentID}}\",\r\n    \"ShortNameEng\": \"{{ShortNameEng}}\",\r\n    \"IsActive\": \"{{IsActive}}\",\r\n    \"Priority\": \"{{Priority}}\",\r\n    \"IsAutoCall\": \"{{IsAutoCall}}\",\r\n    \"IsAutoSms\": \"{{IsAutoSms}}\",\r\n    \"AdditionalInfo\": {\r\n        \"MinAmountToPrint\": \"{{MinAmountToPrint}}\",\r\n        \"ShowPrimaryCreditor\": \"{{ShowPrimaryCreditor}}\",\r\n        \"PrimaryCreditor\": \"{{PrimaryCreditor}}\",\r\n        \"ContractType\": \"{{ContractType}}\",\r\n        \"AgreementDate\": \"{{AgreementDate}}\",\r\n        \"ContractNumber\": \"{{ContractNumber}}\",\r\n        \"ContragentTaxNumber\": \"{{ContragentTaxNumber}}\",\r\n        \"ContragentInfoEmail\": \"{{ContragentInfoEmail}}\",\r\n        \"ClientInfoPhone\": \"{{ClientInfoPhone}}\",\r\n        \"ContragentInfoPostAddress\": \"{{ContragentInfoPostAddress}}\",\r\n        \"ContragentInfoAddress\": \"{{ContragentInfoAddress}}\"\r\n    },\r\n    \"ResponsibleUserID\": \"{{ResponsibleUserID}}\",\r\n    \"Creditor\": \"{{Creditor}}\",\r\n    \"WebSite\": \"{{WebSite}}\",\r\n    \"strategy\": \"overview\"\r\n}"
				},
				"url": {
					"raw": "{{request_url}}/api/admin/contragent-search",
					"host": [
						"{{request_url}}"
					],
					"path": [
						"api",
						"admin",
						"contragent-search"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/contragent-search/{{ContrahensID}}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let origin;\r",
							"\r",
							"if (/\\.ru\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.ru.*$/s, \".ru\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"if(/\\.com\\/.*$/s.test(pm.globals.get(\"project\"))) {\r",
							"    origin = pm.globals.get(\"project\").replace(/\\.com.*$/s, \".com\");\r",
							"    pm.environment.set(\"origin\", origin);\r",
							"}\r",
							"\r",
							"\r",
							"let referer = origin + \"/\";\r",
							"pm.environment.set(\"referer\", referer);\r",
							"\r",
							"\r",
							"let request_url    = origin.split('.');\r",
							"    request_url[0] = request_url[0] + \"-\" + pm.globals.get(\"host\");\r",
							"    request_url    = request_url.join('.');\r",
							"pm.environment.set(\"request_url\", request_url);\r",
							"\r",
							"\r",
							"let authority = request_url.replace(/^http:\\/\\/|^https:\\/\\//, \"\");\r",
							"pm.environment.set(\"authority\", authority);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body           = pm.response.json();\r",
							"const AdditionalInfo = body.AdditionalInfo;\r",
							"const letterType     = body.letterType;\r",
							"\r",
							"const expected_keys_in_response_body  = [\"ID\", \"Name\", \"ShortName\", \"SegmentID\", \"CityCode\", \"City\", \"Street\", \"PhoneNumber\", \"FaxNumber\", \"AuthorizedForPayment\", \r",
							"                                        \"AuthorizedForPaymentShort\", \"ReceivingBank\", \"BranchBank\", \"BankId\", \"TaxNumber\", \"AuthId\", \"Password\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"LetterPhoneId\", \"AutoLetter\", \"BankAccountRequired\", \"PersonalAccountEnabled\", \"PromiseDays\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"DefaultBookingOrderID\", \"WebSite\", \"GroupID\", \"IsActive\", \"SMSTemplateID\", \"Priority\", \"ShortNameEng\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"PaymentDetails\", \"Inserted\", \"Updated\", \"MultiInvoiceBookingTypeID\", \"AdditionalInfo\", \"AutoReportTemplateID\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"EmailTemplateID\", \"IsAutoCall\", \"IsAutoSms\", \"ResponsibleUserID\", \"ActualOndateAggregationLevelID\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"MaxPaymentDateAggregationLevelID\", \"Creditor\", \"InterestOrderID\", \"GroupName\", \"MFO\", \"OKPO\", \r",
							"\t\t\t\t\t\t\t\t\t\t\"systemPhones\", \"letterType\", \"DebtorFeeSetID\", \"AutoCloseOrderID\"];\r",
							"\r",
							"const expected_keys_in_AdditionalInfo = [\"ContractType\", \"AgreementDate\", \"ContractNumber\", \"ClientInfoPhone\", \r",
							"                                         \"PrimaryCreditor\", \"MinAmountToPrint\", \"ContragentInfoEmail\", \"ContragentTaxNumber\", \"ShowPrimaryCreditor\", \r",
							"\t\t\t\t\t\t\t\t\t\t \"ContragentInfoAddress\", \"ContragentInfoPostAddress\", \"MultiInvoiceBookingType\"];\r",
							"\r",
							"const expected_keys_in_letterType     = [\"LetterTypeAliasID\", \"LetterTypeID\"];\r",
							"\r",
							"\r",
							"const contragent_search_schema = {\r",
							"    \r",
							"    \"title\": `Обзор клиента / SELECT * FROM \"Data\".\"Contragent\";`,\r",
							"    \"required\": [\r",
							"        \"ID\",\r",
							"        \"Name\",\r",
							"        \"ShortName\",\r",
							"        \"SegmentID\",\r",
							"        \"CityCode\",\r",
							"        \"City\",\r",
							"        \"Street\",\r",
							"        \"PhoneNumber\",\r",
							"        \"FaxNumber\",\r",
							"        \"AuthorizedForPayment\",\r",
							"        \"AuthorizedForPaymentShort\",\r",
							"        \"ReceivingBank\",\r",
							"        \"BranchBank\",\r",
							"        \"BankId\",\r",
							"        \"TaxNumber\",\r",
							"        \"AuthId\",\r",
							"        \"Password\",\r",
							"        \"LetterPhoneId\",\r",
							"        \"AutoLetter\",\r",
							"        \"BankAccountRequired\",\r",
							"        \"PersonalAccountEnabled\",\r",
							"        \"PromiseDays\",\r",
							"        \"DefaultBookingOrderID\",\r",
							"        \"WebSite\",\r",
							"        \"GroupID\",\r",
							"        \"IsActive\",\r",
							"        \"SMSTemplateID\",\r",
							"        \"Priority\",\r",
							"        \"ShortNameEng\",\r",
							"        \"PaymentDetails\",\r",
							"        \"Inserted\",\r",
							"        \"Updated\",\r",
							"        \"MultiInvoiceBookingTypeID\",\r",
							"        \"AdditionalInfo\",\r",
							"        \"AutoReportTemplateID\",\r",
							"        \"EmailTemplateID\",\r",
							"        \"IsAutoCall\",\r",
							"        \"IsAutoSms\",\r",
							"        \"ResponsibleUserID\",\r",
							"        \"ActualOndateAggregationLevelID\",\r",
							"        \"MaxPaymentDateAggregationLevelID\",\r",
							"        \"Creditor\",\r",
							"        \"InterestOrderID\",\r",
							"        \"GroupName\",\r",
							"        \"MFO\",\r",
							"        \"OKPO\",\r",
							"        \"systemPhones\",\r",
							"        \"letterType\",\r",
							"        \"DebtorFeeSetID\",\r",
							"        \"AutoCloseOrderID\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"ID\": {\r",
							"            \"title\": \"№ Контрагента\",\r",
							"            \"default\": 99,\r",
							"            \"examples\": [\r",
							"                3378\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Name\": {\r",
							"            \"title\": \"Название контрагента\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Название контрагента (Counterparty's name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ShortName\": {\r",
							"            \"title\": \"Сокращ. название Контрагента (кириллица)\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Сокращенное имя контрагента (Кириллица) - 1234567890\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShortName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"SegmentID\": {\r",
							"            \"title\": \"Тип Контрагента / Сегменты контрагентов\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/SegmentID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"CityCode\": {\r",
							"            \"title\": \"CityCode\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/CityCode\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"City\": {\r",
							"            \"title\": \"City\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/City\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Street\": {\r",
							"            \"title\": \"Street\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Street\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"PhoneNumber\": {\r",
							"            \"title\": \"PhoneNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PhoneNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"FaxNumber\": {\r",
							"            \"title\": \"FaxNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/FaxNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthorizedForPayment\": {\r",
							"            \"title\": \"AuthorizedForPayment\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthorizedForPayment\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthorizedForPaymentShort\": {\r",
							"            \"title\": \"AuthorizedForPaymentShort\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthorizedForPaymentShort\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"ReceivingBank\": {\r",
							"            \"title\": \"ReceivingBank\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ReceivingBank\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"BranchBank\": {\r",
							"            \"title\": \"BranchBank\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BranchBank\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"BankId\": {\r",
							"            \"title\": \"BankId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BankId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"TaxNumber\": {\r",
							"            \"title\": \"TaxNumber\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/TaxNumber\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AuthId\": {\r",
							"            \"title\": \"AuthId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AuthId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Password\": {\r",
							"            \"title\": \"Password\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Password\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"LetterPhoneId\": {\r",
							"            \"title\": \"LetterPhoneId\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/LetterPhoneId\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AutoLetter\": {\r",
							"            \"title\": \"Печать писем из системы\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AutoLetter\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"BankAccountRequired\": {\r",
							"            \"title\": \"Требовать банковский счет\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/BankAccountRequired\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"PersonalAccountEnabled\": {\r",
							"            \"title\": \"Личный кабинет\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PersonalAccountEnabled\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"PromiseDays\": {\r",
							"            \"title\": \"PromiseDays\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PromiseDays\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"DefaultBookingOrderID\": {\r",
							"            \"title\": \"DefaultBookingOrderID\",\r",
							"            \"default\": 9,\r",
							"            \"enum\": [9],\r",
							"            \"examples\": [\r",
							"                9\r",
							"            ],\r",
							"            \"$id\": \"#/properties/DefaultBookingOrderID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"WebSite\": {\r",
							"            \"title\": \"Ссылка на доп. информацию\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"http://lurkmore.to/%D0%98%D0%B7_%D1%81%D0%BF%D0%B8%D1%87%D0%B5%D0%BA_%D0%B8_%D0%B6%D0%B5%D0%BB%D1%83%D0%B4%D0%B5%D0%B9\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/WebSite\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"GroupID\": {\r",
							"            \"title\": \"GroupID\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                422\r",
							"            ],\r",
							"            \"$id\": \"#/properties/GroupID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"IsActive\": {\r",
							"            \"title\": \"Статус\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsActive\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"SMSTemplateID\": {\r",
							"            \"title\": \"SMSTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/SMSTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Priority\": {\r",
							"            \"title\": \"Приоритет Контрагента\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1, 2, 3, 4, 5],\r",
							"            \"examples\": [\r",
							"                5\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Priority\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ShortNameEng\": {\r",
							"            \"title\": \"Сокращ. название Контрагента (латиница)\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Counterparty short - Latin - 1234567890\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShortNameEng\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"PaymentDetails\": {\r",
							"            \"title\": \"PaymentDetails\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PaymentDetails\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"Inserted\": {\r",
							"            \"title\": \"Inserted\",\r",
							"            \"default\": \"SELECT now();\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2020-08-18 09:32:50.51036\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Inserted\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Updated\": {\r",
							"            \"title\": \"Updated\",\r",
							"            \"default\": \"SELECT now();\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2020-08-18 09:32:50.51036\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Updated\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MultiInvoiceBookingTypeID\": {\r",
							"            \"title\": \"MultiInvoiceBookingTypeID\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MultiInvoiceBookingTypeID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"AdditionalInfo\": {\r",
							"            \"title\": \"AdditionalInfo\",\r",
							"            \"required\": [\r",
							"                \"ContractType\",\r",
							"                \"AgreementDate\",\r",
							"                \"ContractNumber\",\r",
							"                \"ClientInfoPhone\",\r",
							"                \"PrimaryCreditor\",\r",
							"                \"MinAmountToPrint\",\r",
							"                \"ContragentInfoEmail\",\r",
							"                \"ContragentTaxNumber\",\r",
							"                \"ShowPrimaryCreditor\",\r",
							"                \"ContragentInfoAddress\",\r",
							"                \"ContragentInfoPostAddress\",\r",
							"                \"MultiInvoiceBookingType\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"ContractType\": {\r",
							"                    \"title\": \"Тип договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Тип договора (Сontract) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContractType\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"AgreementDate\": {\r",
							"                    \"title\": \"Дата договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"2015-10-25\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/AgreementDate\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContractNumber\": {\r",
							"                    \"title\": \"Номер договора\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Номер договора / Агентский договор № (Contract No.) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContractNumber\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ClientInfoPhone\": {\r",
							"                    \"title\": \"Контактный телефон\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Контактный телефон (Contact number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ClientInfoPhone\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"PrimaryCreditor\": {\r",
							"                    \"title\": \"Первоначальный кредитор\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Первоначальный кредитор (Original lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/PrimaryCreditor\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"MinAmountToPrint\": {\r",
							"                    \"title\": \"Минимальная сумма для печати писем\",\r",
							"                    \"default\": \"0\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"227\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/MinAmountToPrint\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoEmail\": {\r",
							"                    \"title\": \"Адрес электронной почты\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"yaroslav.plias@creditexpress.ua\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoEmail\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentTaxNumber\": {\r",
							"                    \"title\": \"ОГРН / ИНН\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"ОГРН / ИНН (Tax number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentTaxNumber\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ShowPrimaryCreditor\": {\r",
							"                    \"title\": \"Первоначальный кредитор\",\r",
							"                    \"default\": \"0\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"enum\": [\"0\", \"1\"],\r",
							"                    \"examples\": [\r",
							"                        \"1\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ShowPrimaryCreditor\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoAddress\": {\r",
							"                    \"title\": \"Адрес места нахождения\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Адрес места нахождения (Location address) .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoAddress\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"ContragentInfoPostAddress\": {\r",
							"                    \"title\": \"Адрес почтовый\",\r",
							"                    \"default\": \"\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"examples\": [\r",
							"                        \"Адрес почтовый (Mailing address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/ContragentInfoPostAddress\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"MultiInvoiceBookingType\": {\r",
							"                    \"title\": \"MultiInvoiceBookingType\",\r",
							"                    \"default\": \"Разносим на несколько инвойсов\",\r",
							"                    \"pattern\": \"^(.*)$\",\r",
							"                    \"enum\": [\"Разносим на несколько инвойсов\"],\r",
							"                    \"examples\": [\r",
							"                        \"Разносим на несколько инвойсов\"\r",
							"                    ],\r",
							"                    \"$id\": \"#/properties/AdditionalInfo/properties/MultiInvoiceBookingType\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"$id\": \"#/properties/AdditionalInfo\",\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false\r",
							"        },\r",
							"        \"AutoReportTemplateID\": {\r",
							"            \"title\": \"AutoReportTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AutoReportTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"EmailTemplateID\": {\r",
							"            \"title\": \"EmailTemplateID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/EmailTemplateID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"IsAutoCall\": {\r",
							"            \"title\": \"Авто очереди звонков\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                0\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsAutoCall\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"IsAutoSms\": {\r",
							"            \"title\": \"Авто очереди СМС\",\r",
							"            \"default\": 1,\r",
							"            \"enum\": [0, 1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/IsAutoSms\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ResponsibleUserID\": {\r",
							"            \"title\": \"Менеджер проекта\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                7017\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ResponsibleUserID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"ActualOndateAggregationLevelID\": {\r",
							"            \"title\": \"ActualOndateAggregationLevelID\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ActualOndateAggregationLevelID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"MaxPaymentDateAggregationLevelID\": {\r",
							"            \"title\": \"MaxPaymentDateAggregationLevelID\",\r",
							"            \"default\": 0,\r",
							"            \"enum\": [1],\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MaxPaymentDateAggregationLevelID\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Creditor\": {\r",
							"            \"title\": \"Кредитор\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Кредитор (Lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/Creditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"InterestOrderID\": {\r",
							"            \"title\": \"InterestOrderID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/InterestOrderID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"GroupName\": {\r",
							"            \"title\": \"Название группы контрагента\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Название группы контрагента (Counterparty's group name) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/GroupName\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MFO\": {\r",
							"            \"title\": \"MFO\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MFO\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"OKPO\": {\r",
							"            \"title\": \"OKPO\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/OKPO\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"systemPhones\": {\r",
							"            \"title\": \"systemPhones\",\r",
							"            \"$id\": \"#/properties/systemPhones\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"letterType\": {\r",
							"            \"title\": \"letterType\",\r",
							"            \"items\": {\r",
							"                \"title\": \"LetterTypeAliasID, LetterTypeID\",\r",
							"                \"required\": [\r",
							"                    \"LetterTypeAliasID\",\r",
							"                    \"LetterTypeID\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"LetterTypeAliasID\": {\r",
							"                        \"title\": \"LetterTypeAliasID\",\r",
							"                        \"default\": 1,\r",
							"                        \"enum\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\r",
							"                        \"examples\": [\r",
							"                            1\r",
							"                        ],\r",
							"                        \"$id\": \"#/properties/letterType/items/properties/LetterTypeAliasID\",\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"LetterTypeID\": {\r",
							"                        \"title\": \"LetterTypeID\",\r",
							"                        \"default\": null,\r",
							"                        \"enum\": [null],\r",
							"                        \"examples\": [\r",
							"                            null\r",
							"                        ],\r",
							"                        \"$id\": \"#/properties/letterType/items/properties/LetterTypeID\",\r",
							"                        \"type\": \"null\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"##/properties/letterType/items\",\r",
							"                \"type\": \"object\",\r",
							"                \"additionalProperties\": false\r",
							"            },\r",
							"            \"$id\": \"#/properties/letterType\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"DebtorFeeSetID\": {\r",
							"            \"title\": \"DebtorFeeSetID\",\r",
							"            \"default\": null,\r",
							"            \"enum\": [null],\r",
							"            \"examples\": [\r",
							"                null\r",
							"            ],\r",
							"            \"$id\": \"#/properties/DebtorFeeSetID\",\r",
							"            \"type\": \"null\"\r",
							"        },\r",
							"        \"AutoCloseOrderID\": {\r",
							"            \"title\": \"AutoCloseOrderID\",\r",
							"            \"items\": {\r",
							"                \"title\": \"AutoCloseOrderID\",\r",
							"                \"default\": 0,\r",
							"                \"enum\": [4],\r",
							"                \"examples\": [\r",
							"                    4\r",
							"                ],\r",
							"                \"$id\": \"#/properties/AutoCloseOrderID/items\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"$id\": \"#/properties/AutoCloseOrderID\",\r",
							"            \"type\": \"array\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"/api/admin/contragent-search/{{ContrahensID}}\",\r",
							"    \"type\": \"object\",\r",
							"    \"additionalProperties\": false,\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"const AdditionalInfo_schema = {\r",
							"    \"title\": \"Nested object 'AdditionalInfo'\",\r",
							"    \"required\": [\r",
							"        \"ContractType\",\r",
							"        \"AgreementDate\",\r",
							"        \"ContractNumber\",\r",
							"        \"ClientInfoPhone\",\r",
							"        \"PrimaryCreditor\",\r",
							"        \"MinAmountToPrint\",\r",
							"        \"ContragentInfoEmail\",\r",
							"        \"ContragentTaxNumber\",\r",
							"        \"ShowPrimaryCreditor\",\r",
							"        \"ContragentInfoAddress\",\r",
							"        \"ContragentInfoPostAddress\",\r",
							"        \"MultiInvoiceBookingType\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"ContractType\": {\r",
							"            \"title\": \"Тип договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Тип договора (Сontract) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContractType\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"AgreementDate\": {\r",
							"            \"title\": \"Дата договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"2014-04-30\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/AgreementDate\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContractNumber\": {\r",
							"            \"title\": \"Номер договора\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Номер договора / Агентский договор № (Contract No.) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContractNumber\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ClientInfoPhone\": {\r",
							"            \"title\": \"Контактный телефон\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Контактный телефон (Contact number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ClientInfoPhone\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"PrimaryCreditor\": {\r",
							"            \"title\": \"Первоначальный кредитор\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Первоначальный кредитор (Original lender) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/PrimaryCreditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MinAmountToPrint\": {\r",
							"            \"title\": \"Минимальная сумма для печати писем\",\r",
							"            \"default\": \"0\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"53\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MinAmountToPrint\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoEmail\": {\r",
							"            \"title\": \"Адрес электронной почты\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"yaroslav.plias@creditexpress.ua\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoEmail\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentTaxNumber\": {\r",
							"            \"title\": \"ОГРН / ИНН\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"ОГРН / ИНН (Tax number) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentTaxNumber\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ShowPrimaryCreditor\": {\r",
							"            \"title\": \"Первоначальный кредитор\",\r",
							"            \"default\": \"0\",\r",
							"            \"enum\": [\"0\", \"1\"],\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"0\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ShowPrimaryCreditor\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoAddress\": {\r",
							"            \"title\": \"Адрес места нахождения\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Адрес места нахождения (Location address) .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ContragentInfoPostAddress\": {\r",
							"            \"title\": \"Адрес почтовый\",\r",
							"            \"default\": \"\",\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Адрес почтовый (Mailing address) 1234567890 .!@№#$;%^:&?*()_-+=/> <,`$'`\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/ContragentInfoPostAddress\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"MultiInvoiceBookingType\": {\r",
							"            \"title\": \"MultiInvoiceBookingType\",\r",
							"            \"default\": \"Разносим на несколько инвойсов\",\r",
							"            \"enum\": [\"Разносим на несколько инвойсов\"],\r",
							"            \"pattern\": \"^(.*)$\",\r",
							"            \"examples\": [\r",
							"                \"Разносим на несколько инвойсов\"\r",
							"            ],\r",
							"            \"$id\": \"#/properties/MultiInvoiceBookingType\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"/api/contragent-search/{{ContrahensID}}.AdditionalInfo\",\r",
							"    \"type\": \"object\",\r",
							"    \"additionalProperties\": false,\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft/2020-12/json-schema-validation.html\"\r",
							"}\r",
							"\r",
							"\r",
							"/* --- TESTS --- */\r",
							"\r",
							"pm.test(`Сheck the active environment is 'new counterparty'`, () => {\r",
							"    pm.expect(pm.environment.name).to.eql(\"new counterparty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request! Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Status code is \"OK\"`, function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 5000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test('Schema \"contragent-search/{{ContrahensID}}\" is valid', function() {\r",
							"    pm.expect(tv4.validate(body, contragent_search_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test('Schema \"contragent-search/{{ContrahensID}}.AdditionalInfo\" is valid', function() {\r",
							"    pm.expect(tv4.validate(AdditionalInfo, AdditionalInfo_schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is an object that has all expected keys\", function () {\r",
							"\r",
							"    pm.expect(body).to.be.an('object').that.has.all.keys(expected_keys_in_response_body);\r",
							"\r",
							"    let storageTank = Object.keys(body).filter(function(key) {\r",
							"        return !expected_keys_in_response_body.includes(key) \r",
							"    }); \r",
							"           \r",
							"    if (storageTank.length !== 0) {\r",
							"        console.log(`Actual keys received in response did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"    }\r",
							"    \r",
							"    pm.expect(storageTank.length).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(`Response body has length of ${expected_keys_in_response_body.length}`, function () {\r",
							"    pm.expect(Object.keys(body)).to.have.lengthOf(expected_keys_in_response_body.length);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"'AdditionalInfo' key is an object that has all expected keys\", function () {\r",
							"\r",
							"    pm.expect(AdditionalInfo).to.be.an('object').that.has.all.keys(expected_keys_in_AdditionalInfo);\r",
							"\r",
							"    let storageTank = Object.keys(AdditionalInfo).filter(function(key) {\r",
							"        return !expected_keys_in_AdditionalInfo.includes(key) \r",
							"    }); \r",
							"           \r",
							"    if (storageTank.length !== 0) {\r",
							"        console.log(`Actual keys received in 'AdditionalInfo' did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"    }\r",
							"   \r",
							"    pm.expect(storageTank.length).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(`'AdditionalInfo' key has length of ${expected_keys_in_AdditionalInfo.length}`, function () {\r",
							"    pm.expect(Object.keys(AdditionalInfo)).to.have.lengthOf(expected_keys_in_AdditionalInfo.length);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(`An object elements in an array of 'letterType' key has length of ${expected_keys_in_letterType.length} and expected values`, function () {\r",
							"\r",
							"    pm.expect(letterType).to.be.an('array');\r",
							"\r",
							"    letterType.forEach((elem)=> {\r",
							"        pm.expect(elem).to.be.an('object').that.has.all.keys(expected_keys_in_letterType);\r",
							"        pm.expect(Object.keys(elem)).to.have.lengthOf(expected_keys_in_letterType.length);\r",
							"\r",
							"        pm.expect(elem.LetterTypeAliasID).to.be.above(0);\r",
							"        pm.expect(elem.LetterTypeAliasID).to.be.below(16);\r",
							"        pm.expect(elem.LetterTypeID).to.be.null;\r",
							"\r",
							"\r",
							"        let storageTank = Object.keys(elem).filter(function(key) {\r",
							"            return !expected_keys_in_letterType.includes(key) \r",
							"        });\r",
							"        \r",
							"        if (storageTank.length !== 0) {\r",
							"            console.log(`Actual keys received in the array of 'letterType' key did not meet the expected. Unexpected keys: ${storageTank}`)\r",
							"        }\r",
							"        \r",
							"        pm.expect(storageTank.length).to.eql(0);\r",
							"        \r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'ID' key is number\", () => {\r",
							"\tpm.expect(body.ID).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'Name' key has expected value\", () => {\r",
							"\tpm.expect(body.Name).to.eql(pm.environment.get(\"Name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'ShortName' key has expected value\", () => {\r",
							"\tpm.expect(body.ShortName).to.eql(pm.environment.get(\"ShortName\"));\r",
							"});\r",
							"  \r",
							"pm.test(\"Value in 'SegmentID' key has expected value\", () => {\r",
							"\tpm.expect(body.SegmentID).to.eql(pm.environment.get(\"SegmentID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'CityCode' key is null\", () => {\r",
							"\tpm.expect(body.CityCode).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'City' key is null\", () => {\r",
							"\tpm.expect(body.City).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'Street' key is null\", () => {\r",
							"\tpm.expect(body.Street).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'PhoneNumber' key is null\", () => {\r",
							"\tpm.expect(body.PhoneNumber).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'FaxNumber' key is null\", () => {\r",
							"\tpm.expect(body.FaxNumber).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'AuthorizedForPayment' key is null\", () => {\r",
							"\tpm.expect(body.AuthorizedForPayment).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'AuthorizedForPaymentShort' key is null\", () => {\r",
							"\tpm.expect(body.AuthorizedForPaymentShort).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'ReceivingBank' key is null\", () => {\r",
							"\tpm.expect(body.ReceivingBank).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'BranchBank' key is null\", () => {\r",
							"\tpm.expect(body.BranchBank).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'BankId' key is null\", () => {\r",
							"\tpm.expect(body.BankId).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'TaxNumber' key is null\", () => {\r",
							"\tpm.expect(body.TaxNumber).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'AuthId' key is null\", () => {\r",
							"\tpm.expect(body.AuthId).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'Password' key is null\", () => {\r",
							"\tpm.expect(body.Password).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'LetterPhoneId' key is null\", () => {\r",
							"\tpm.expect(body.LetterPhoneId).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'AutoLetter' key has expected value\", () => {\r",
							"\tpm.expect(String(body.AutoLetter)).to.eql(String(pm.environment.get(\"AutoLetter\")));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'BankAccountRequired' key has expected value\", () => {\r",
							"\tpm.expect(String(body.BankAccountRequired)).to.eql(String(pm.environment.get(\"BankAccountRequired\")));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'PersonalAccountEnabled' key has expected value\", () => {\r",
							"\tpm.expect(String(body.PersonalAccountEnabled)).to.eql(String(pm.environment.get(\"PersonalAccountEnabled\")));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'PromiseDays' key has expected value\", () => {\r",
							"\tpm.expect(body.PromiseDays).to.eql(0);\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'DefaultBookingOrderID' key has expected value\", () => {\r",
							"\tpm.expect(body.DefaultBookingOrderID).to.eql(9);\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'WebSite' key has expected value\", () => {\r",
							"\tpm.expect(body.WebSite).to.eql(pm.environment.get(\"WebSite\"));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'GroupID' key is number\", () => {\r",
							"\tpm.expect(body.GroupID).to.be.a(\"number\");\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'IsActive' key has expected value\", () => {\r",
							"\tpm.expect(String(body.IsActive)).to.eql(String(pm.environment.get(\"IsActive\")));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'SMSTemplateID' key is null\", () => {\r",
							"\tpm.expect(body.SMSTemplateID).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'Priority' key has expected value\", () => {\r",
							"\tpm.expect(String(body.Priority)).to.eql(String(pm.environment.get(\"Priority\")));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'ShortNameEng' key has expected value\", () => {\r",
							"\tpm.expect(body.ShortNameEng).to.eql(pm.environment.get(\"ShortNameEng\"));\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'PaymentDetails' key is null\", () => {\r",
							"\tpm.expect(body.PaymentDetails).to.be.null;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'Inserted' key is timestamp\", () => {\r",
							"\tpm.expect(isNaN(Date.parse(body.Inserted))).to.be.false;\r",
							"\tpm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(body.Inserted)).to.be.true;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'Updated' key is timestamp\", () => {\r",
							"\tpm.expect(isNaN(Date.parse(body.Updated))).to.be.false;\r",
							"\tpm.expect(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{6}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{5}$/.test(body.Updated)).to.be.true;\r",
							"  });\r",
							"  \r",
							"  pm.test(\"Value in 'MultiInvoiceBookingTypeID' key has expected value\", () => {\r",
							"\tpm.expect(body.MultiInvoiceBookingTypeID).to.eql(1);\r",
							"  });\r",
							"\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContractType' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContractType).to.eql(pm.environment.get(\"ContractType\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'AgreementDate' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.AgreementDate).to.eql(pm.environment.get(\"AgreementDate\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContractNumber' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContractNumber).to.eql(pm.environment.get(\"ContractNumber\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ClientInfoPhone' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ClientInfoPhone).to.eql(pm.environment.get(\"ClientInfoPhone\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'PrimaryCreditor' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.PrimaryCreditor).to.eql(pm.environment.get(\"PrimaryCreditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'MinAmountToPrint' key has expected value\", () => {\r",
							"  pm.expect(String(AdditionalInfo.MinAmountToPrint)).to.eql(String(pm.environment.get(\"MinAmountToPrint\")));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoEmail' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContragentInfoEmail).to.eql(pm.environment.get(\"ContragentInfoEmail\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentTaxNumber' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContragentTaxNumber).to.eql(pm.environment.get(\"ContragentTaxNumber\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ShowPrimaryCreditor' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ShowPrimaryCreditor).to.eql(pm.environment.get(\"ShowPrimaryCreditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoAddress' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContragentInfoAddress).to.eql(pm.environment.get(\"ContragentInfoAddress\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'ContragentInfoPostAddress' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.ContragentInfoPostAddress).to.eql(pm.environment.get(\"ContragentInfoPostAddress\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalInfo's 'MultiInvoiceBookingType' key has expected value\", () => {\r",
							"  pm.expect(AdditionalInfo.MultiInvoiceBookingType).to.eql(\"Разносим на несколько инвойсов\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Value in 'AutoReportTemplateID' key is null\", () => {\r",
							"  pm.expect(body.AutoReportTemplateID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'EmailTemplateID' key is null\", () => {\r",
							"  pm.expect(body.EmailTemplateID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'IsAutoCall' key has expected value\", () => {\r",
							"  pm.expect(String(body.IsAutoCall)).to.eql(String(pm.environment.get(\"IsAutoCall\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'IsAutoSms' key has expected value\", () => {\r",
							"  pm.expect(String(body.IsAutoSms)).to.eql(String(pm.environment.get(\"IsAutoSms\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'ResponsibleUserID' key has expected value\", () => {\r",
							"  pm.expect(body.ResponsibleUserID).to.eql(pm.environment.get(\"ResponsibleUserID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'ActualOndateAggregationLevelID' key has expected value\", () => {\r",
							"  pm.expect(body.ActualOndateAggregationLevelID).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'MaxPaymentDateAggregationLevelID' key has expected value\", () => {\r",
							"  pm.expect(body.MaxPaymentDateAggregationLevelID).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'Creditor' key has expected value\", () => {\r",
							"  pm.expect(body.Creditor).to.eql(pm.environment.get(\"Creditor\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'InterestOrderID' key is null\", () => {\r",
							"  pm.expect(body.InterestOrderID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'GroupName' key has expected value\", () => {\r",
							"  pm.expect(body.GroupName).to.eql(pm.environment.get(\"GroupName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'MFO' key is null\", () => {\r",
							"  pm.expect(body.MFO).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'OKPO' key is null\", () => {\r",
							"  pm.expect(body.OKPO).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"'systemPhones' key is an empty array\", () => {\r",
							"  pm.expect(body.systemPhones).to.be.an(\"array\");\r",
							"  pm.expect(body.systemPhones).to.have.lengthOf(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Value in 'DebtorFeeSetID' key is null\", () => {\r",
							"  pm.expect(body.DebtorFeeSetID).to.be.null;\r",
							"});\r",
							"\r",
							"pm.test(\"'AutoCloseOrderID' key is an array having length of 1. Default element: 4\", () => {\r",
							"  pm.expect(body.AutoCloseOrderID).to.be.an(\"array\");\r",
							"  pm.expect(body.AutoCloseOrderID).to.have.lengthOf(1);\r",
							"  pm.expect(body.AutoCloseOrderID[0]).to.eql(4);\r",
							"});\r",
							"\r",
							"pm.test(\"'ID'(ContrahensID) was recorded to the global collection\", function () {\r",
							"    pm.globals.set(\"ContrahensID\", body.ID);\r",
							"    pm.expect(body.ID).to.eql(pm.globals.get(\"ContrahensID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authority",
						"value": "{{authority}}"
					},
					{
						"key": "pragma",
						"value": "no-cache"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\""
					},
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "uniquehashcaseid",
						"value": "undefined"
					},
					{
						"key": "authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"
					},
					{
						"key": "origin",
						"value": "{{origin}}"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "referer",
						"value": "{{referer}}"
					},
					{
						"key": "accept-language",
						"value": "ru,de;q=0.9,uk;q=0.8,hr;q=0.7,hu;q=0.6,en;q=0.5,en-AU;q=0.4,en-GB-oxendict;q=0.3,en-GB;q=0.2,en-IN;q=0.1,en-CA;q=0.1,en-NZ;q=0.1,en-US;q=0.1,en-ZA;q=0.1"
					},
					{
						"key": "cookie",
						"value": "{{cookie}}"
					}
				],
				"url": {
					"raw": "{{request_url}}/api/contragent-search/{{ContrahensID}}",
					"host": [
						"{{request_url}}"
					],
					"path": [
						"api",
						"contragent-search",
						"{{ContrahensID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}